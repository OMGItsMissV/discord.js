{"version":3,"sources":["../../src/Client/InternalClient.js"],"names":["GATEWAY_VERSION","zlib","libVersion","require","version","waitFor","condition","value","interval","Promise","resolve","int","setInterval","isDone","clearInterval","delay","ms","setTimeout","InternalClient","constructor","discordClient","setupCalled","setup","apiRequest","method","url","useAuth","data","file","reject","promise","res","rej","buckets","match","channels","get","private_channels","server","id","user","bot","username","self","actualCall","startTime","Date","now","ret","set","token","attach","name","i","undefined","field","send","userAgentInfo","full","end","error","status","client","emit","options","shard","body","done","bucket","queue","state","IDLE","websocket","userAgent","compress","users","friends","blocked_users","outgoing_friend_requests","incoming_friend_requests","servers","unavailableServers","autoReconnectInterval","unsyncedGuilds","guildSyncQueue","guildSyncQueueLength","intervals","typing","kai","misc","voiceConnections","resolver","readyTime","messageAwaits","tokenCacher","init","cleanIntervals","concat","disconnected","autoReconnect","forEach","vc","leaveVoiceChannel","Math","min","random","email","loginWithToken","password","catch","uptime","info","chann","leave","connection","destroy","resolveChannel","then","channel","Error","type","awaitResponse","msg","resolveMessage","awaitID","author","push","joinVoiceChannel","joinSendWS","sendWS","op","d","joinVoice","session","sessionID","endpoint","timeout","check","t","guild_id","clearTimeout","removeListener","on","existingServerConn","length","voiceConnection","getGuildMembers","serverID","chunkCount","forceFetchCount","forceFetchLength","requestGuildMembers","forceFetchQueue","query","limit","syncGuild","guildID","checkReady","key","hasOwnProperty","restartServerCreateTimeout","guildCreateTimeout","createServer","region","resolveString","SERVERS","joinServer","invite","resolveInviteID","INVITE","guild","updateServer","resolveServer","newOptions","icon","resolveToBase64","splash","owner","resolveUser","owner_id","verificationLevel","verification_level","afkChannel","afk_channel_id","afkTimeout","afk_timeout","SERVER","leaveServer","srv","ME_SERVER","deleteServer","LOGGED_IN","getGateway","startsWith","createWS","login","tk","getToken","DISCONNECTED","LOGGING_IN","LOGIN","setToken","logout","disconnect","close","LOGOUT","startPM","resUser","ME_CHANNELS","recipient_id","add","gatewayURL","GATEWAY","sendMessage","where","_content","String","basename","path","destination","content","disableEveryone","replace","resolveFile","CHANNEL_MESSAGES","tts","nonce","messages","sendFile","_file","deleteMessage","_message","message","chain","wait","CHANNEL_MESSAGE","remove","deleteMessages","_messages","Array","map","m","updateMessage","update","getChannelLogs","_channel","qsObject","before","after","around","stringify","getMessage","messageID","pinMessage","CHANNEL_PIN","unpinMessage","pinned","getPinnedMessages","CHANNEL_PINS","getBans","SERVER_BANS","ban","createChannel","SERVER_CHANNELS","deleteChannel","CHANNEL","banMember","resolvedUser","unbanMember","kickMember","SERVER_MEMBERS","moveMember","channel_id","voiceChannel","muteMember","mute","unmuteMember","deafenMember","deaf","undeafenMember","setNickname","nick","setNote","note","ME_NOTES","createRole","SERVER_ROLES","role","roles","updateRole","resolveRole","newData","color","hoist","position","permissions","mentionable","perm","deleteRole","addMemberToRole","member","isArray","r","some","memberMap","roleIDs","indexOf","memberHasRole","roledata","rolesOf","removeMemberFromRole","item","splice","createInvite","chanServ","validate","max_age","maxAge","max_uses","maxUses","temporary","xkcdpass","xkcd","CHANNEL_INVITES","deleteInvite","getInvite","has","res2","getInvites","SERVER_INVITES","overwritePermissions","updated","allow","deny","previousOverwrite","permissionOverwrites","CHANNEL_PERMISSIONS","setStatus","idleStatus","game","packet","idle_since","sendTyping","startTyping","stopTyping","updateDetails","avatar","new_password","newPassword","ME","setAvatar","setUsername","setChannelTopic","topic","updateChannel","setChannelName","setChannelPosition","setChannelUserLimit","userLimit","setChannelBitrate","kbitrate","bitrate","user_limit","ceil","_bitrate","addFriend","discriminator","FRIENDS","removeFriend","getServerWebhooks","SERVER_WEBHOOKS","webhook","webhooks","getChannelWebhooks","CHANNEL_WEBHOOKS","editWebhook","resolveWebhook","WEBHOOK","createWebhook","deleteWebhook","sendWebhookMessage","slack","WEBHOOK_MESSAGE","getOAuthApplication","appID","OAUTH2_APPLICATION","ack","object","JSON","endsWith","onopen","onclose","event","code","err","sequence","onerror","e","onmessage","Buffer","inflateSync","toString","parse","s","processPacket","console","log","heartbeatAcked","heartbeat","identify","resume","heartbeat_interval","RESUMED","READY","session_id","guilds","unavailable","forceFetchUsers","members","memberCount","pm","relationships","friend","notes","newUser","MESSAGE_CREATE","lastMessageID","fn","MESSAGE_DELETE","MESSAGE_DELETE_BULK","ids","MESSAGE_UPDATE","attachments","embeds","timestamp","mention_everyone","everyoneMentioned","mentions","nmsg","SERVER_CREATE","large","SERVER_DELETE","found","SERVER_UPDATE","newserver","equalsStrict","CHANNEL_CREATE","chan","is_private","CHANNEL_DELETE","CHANNEL_UPDATE","SERVER_ROLE_CREATE","SERVER_ROLE_DELETE","role_id","SERVER_ROLE_UPDATE","newRole","SERVER_MEMBER_ADD","selfMute","selfDeaf","joinedAt","joined_at","SERVER_MEMBER_REMOVE","SERVER_MEMBER_UPDATE","oldMember","self_mute","self_deaf","PRESENCE_UPDATE","presenceUser","USER_UPDATE","TYPING","user_id","since","SERVER_BAN_ADD","SERVER_BAN_REMOVE","USER_NOTE_UPDATE","oldNote","updatedUser","VOICE_STATE_UPDATE","eventVoiceStateUpdate","eventVoiceLeave","SERVER_MEMBERS_CHUNK","testtime","FRIEND_ADD","inUser","outUser","FRIEND_REMOVE","rejectedUser","incomingCancel","SERVER_SYNC","dataUser","internal","presence","presences","pendingVoiceStates","voiceState","eventVoiceJoin","seq","v","large_threshold","largeThreshold","properties","process","platform"],"mappings":"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","file":"InternalClient.js","sourcesContent":["\"use strict\";\n\nimport request from \"superagent\";\nimport WebSocket from \"ws\";\nimport ConnectionState from \"./ConnectionState\";\nimport qs from \"querystring\";\n\nimport {Endpoints, PacketType, Permissions} from \"../Constants\";\n\nimport Bucket from \"../Util/Bucket\";\nimport Cache from \"../Util/Cache\";\nimport Resolver from \"./Resolver/Resolver\";\n\nimport User from \"../Structures/User\";\nimport Channel from \"../Structures/Channel\";\nimport ServerChannel from \"../Structures/ServerChannel\";\nimport TextChannel from \"../Structures/TextChannel\";\nimport VoiceChannel from \"../Structures/VoiceChannel\";\nimport PMChannel from \"../Structures/PMChannel\";\nimport Server from \"../Structures/Server\";\nimport Message from \"../Structures/Message\";\nimport Role from \"../Structures/Role\";\nimport Invite from \"../Structures/Invite\";\nimport Webhook from \"../Structures/Webhook\";\nimport VoiceConnection from \"../Voice/VoiceConnection\";\nimport TokenCacher from \"../Util/TokenCacher\";\n\nvar GATEWAY_VERSION = 6;\nvar zlib;\nvar libVersion = require('../../package.json').version;\n\nfunction waitFor(condition, value = condition, interval = 20) {\n\treturn new Promise(resolve => {\n\t\tvar int = setInterval(() => {\n\t\t\tvar isDone = condition();\n\t\t\tif (isDone) {\n\t\t\t\tif (condition === value) {\n\t\t\t\t\tresolve(isDone);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(value(isDone));\n\t\t\t\t}\n\t\t\t\treturn clearInterval(int);\n\t\t\t}\n\t\t}, interval);\n\t});\n}\n\nfunction delay(ms) {\n\treturn new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default class InternalClient {\n\tconstructor(discordClient) {\n\t  this.setupCalled = false;\n\t\tthis.setup(discordClient);\n\t}\n\n\tapiRequest(method, url, useAuth, data, file) {\n\t\tvar resolve, reject;\n\t\tvar promise = new Promise((res, rej) => {\n\t\t\tresolve = res;\n\t\t\treject = rej;\n\t\t});\n\t\tvar buckets = [];\n        var match = url.match(/\\/channels\\/([0-9]+)\\/messages(\\/[0-9]+)?$/);\n        if(match) {\n            if(method === \"del\" && (match[1] = this.channels.get(\"id\", match[1]) || this.private_channels.get(\"id\", match[1]))) {\n                buckets = [\"dmsg:\" + (match[1].server || {}).id];\n            } else if(this.user.bot) {\n                if(method === \"post\" || method === \"patch\") {\n                    if(this.private_channels.get(\"id\", match[1])) {\n                        buckets = [\"bot:msg:dm\", \"bot:msg:global\"];\n                    } else if((match[1] = this.channels.get(\"id\", match[1]))) {\n                        buckets = [\"bot:msg:guild:\" + match[1].server.id, \"bot:msg:global\"];\n                    }\n                }\n            } else {\n                buckets = [\"msg\"];\n            }\n        } else if(method === \"patch\") {\n            if(url === \"/users/@me\" && this.user && data.username && data.username !== this.user.username) {\n                buckets = [\"username\"];\n            } else if((match = url.match(/\\/guilds\\/([0-9]+)\\/members\\/[0-9]+$/))) {\n                buckets = [\"guild_member:\" + match[1]];\n            } else if((match = url.match(/\\/guilds\\/([0-9]+)\\/members\\/@me\\/nick$/))) {\n                buckets = [\"guild_member_nick:\" + match[1]];\n            }\n        }\n\n        var self = this;\n\n\t\tvar actualCall = function() {\n\t\t\tvar startTime = Date.now();\n\t\t\tvar ret = request[method](url);\n\t\t\tif (useAuth) {\n\t\t\t\tret.set(\"authorization\", self.token);\n\t\t\t}\n\t\t\tif (file) {\n\t\t\t\tret.attach(\"file\", file.file, file.name);\n\t\t\t\tif (data) {\n\t\t\t\t\tfor (var i in data) {\n\t\t\t\t\t\tif (data[i] !== undefined) {\n\t\t\t\t\t\t\tret.field(i, data[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (data) {\n\t\t\t\tret.send(data);\n\t\t\t}\n\t\t\tret.set('User-Agent', self.userAgentInfo.full);\n\t\t\tret.end((error, data) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tif (data && data.status === 429) {\n\t\t\t\t\t\tself.client.emit(\"debug\", \"Encountered 429 at \" + url + \" | \" + self.client.options.shard + \" | Buckets\" + buckets + \" | \" + (Date.now() - startTime) + \"ms latency\");\n\t\t\t\t\t}\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(data.body);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n        var waitFor = 1;\n        var i = 0;\n        var done = function() {\n            if(++i === waitFor) {\n                actualCall();\n            }\n        };\n        for(var bucket of buckets) {\n            ++waitFor;\n            this.buckets[bucket].queue(done);\n        }\n        done();\n        return promise;\n\t}\n\n\tsetup(discordClient) {\n\t  this.setupCalled = true;\n\t\tdiscordClient = discordClient || this.client;\n\t\tthis.client = discordClient;\n\t\tthis.state = ConnectionState.IDLE;\n\t\tthis.websocket = null;\n\t\tthis.userAgent = {\n\t\t\turl: 'https://github.com/hydrabolt/discord.js',\n\t\t\tversion: require('../../package.json').version\n\t\t};\n\n\t\tif (this.client.options.compress) {\n\t\t\tzlib = require(\"zlib\");\n\t\t}\n\n\t\t// creates 4 caches with discriminators based on ID\n\t\tthis.users = new Cache();\n\t\tthis.friends = new Cache();\n\t\tthis.blocked_users = new Cache();\n\t\tthis.outgoing_friend_requests = new Cache();\n\t\tthis.incoming_friend_requests = new Cache();\n\t\tthis.channels = new Cache();\n\t\tthis.servers = new Cache();\n\t\tthis.unavailableServers = new Cache();\n\t\tthis.private_channels = new Cache();\n\t\tthis.autoReconnectInterval = 1000;\n\t\tthis.unsyncedGuilds = 0;\n        this.guildSyncQueue = [];\n        this.guildSyncQueueLength = 1;\n\n\t\tthis.intervals = {\n\t\t\ttyping : [],\n\t\t\tkai : null,\n\t\t\tmisc : []\n\t\t};\n\n\t\tthis.voiceConnections = new Cache();\n\t\tthis.resolver = new Resolver(this);\n\t\tthis.readyTime = null;\n\t\tthis.messageAwaits = {};\n\t\tthis.buckets = {\n            \"bot:msg:dm\": new Bucket(5, 5000),\n            \"bot:msg:global\": new Bucket(50, 10000),\n            \"msg\": new Bucket(10, 10000),\n            \"dmsg:undefined\": new Bucket(5, 1000),\n            \"username\": new Bucket(2, 3600000)\n        };\n\n\t\tif (!this.tokenCacher) {\n\t\t\tthis.tokenCacher = new TokenCacher(this.client);\n\t\t\tthis.tokenCacher.init(0);\n\t\t}\n\t}\n\n\tcleanIntervals() {\n\t\tfor (let interval of this.intervals.typing.concat(this.intervals.misc).concat(this.intervals.kai)) {\n\t\t\tif (interval) {\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t}\n\t}\n\n\tdisconnected(autoReconnect = false) {\n\n\t\tthis.cleanIntervals();\n\n\t\tthis.voiceConnections.forEach(vc => {\n\t\t\tthis.leaveVoiceChannel(vc);\n\t\t});\n\n\t\tif (autoReconnect) {\n\t\t\tthis.autoReconnectInterval = Math.min(this.autoReconnectInterval * (Math.random() + 1), 60000);\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!this.email && !this.token) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check whether the email is set (if not, only a token has been used for login)\n\t\t\t\tthis.loginWithToken(this.token, this.email, this.password).catch(() => this.disconnected(true));\n\t\t\t}, this.autoReconnectInterval);\n\t\t}\n\n\t\tthis.client.emit(\"disconnected\");\n\t}\n\n\tget uptime() {\n\t\treturn (this.readyTime ? Date.now() - this.readyTime : null);\n\t}\n\n\tset userAgent(info) {\n\t\tinfo.full = `DiscordBot (${info.url}, ${info.version})`;\n\t\tthis.userAgentInfo = info;\n\t}\n\n\tget userAgent() {\n\t\treturn this.userAgentInfo;\n\t}\n\n\t//def leaveVoiceChannel\n\tleaveVoiceChannel(chann) {\n\t\tif (this.user.bot) {\n\t\t\tvar leave = (connection) => {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tconnection.destroy();\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif (chann instanceof VoiceChannel) {\n\t\t\t\treturn this.resolver.resolveChannel(chann).then(channel => {\n\t\t\t\t\tif (!channel) {\n\t\t\t\t\t\treturn Promise.reject(new Error(\"voice channel does not exist\"));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (channel.type !== 2) {\n\t\t\t\t\t\treturn Promise.reject(new Error(\"channel is not a voice channel!\"));\n\t\t\t\t\t}\n\n\t\t\t\t\tvar connection = this.voiceConnections.get(\"voiceChannel\", channel);\n\t\t\t\t\tif (!connection) {\n\t\t\t\t\t\treturn Promise.reject(new Error(\"not connected to that voice channel\"));\n\t\t\t\t\t}\n\t\t\t\t\treturn leave(connection);\n\t\t\t\t});\n\t\t\t} else if (chann instanceof VoiceConnection) {\n\t\t\t\treturn leave(chann);\n\t\t\t} else {\n\t\t\t\treturn Promise.reject(new Error(\"invalid voice channel/connection to leave\"))\n\t\t\t}\n\t\t} else {\n\t\t\t// preserve old functionality for non-bots\n\t\t\tif (this.voiceConnections[0]) {\n\t\t\t\tthis.voiceConnections[0].destroy();\n\t\t\t}\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\t//def awaitResponse\n\tawaitResponse(msg) {\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tmsg = this.resolver.resolveMessage(msg);\n\n\t\t\tif (!msg) {\n\t\t\t\treject(new Error(\"message undefined\"));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar awaitID = msg.channel.id + msg.author.id;\n\n\t\t\tif ( !this.messageAwaits[awaitID] ) {\n\t\t\t\tthis.messageAwaits[awaitID] = [];\n\t\t\t}\n\n\t\t\tthis.messageAwaits[awaitID].push(resolve);\n\t\t});\n\t}\n\n\t//def joinVoiceChannel\n\tjoinVoiceChannel(chann) {\n\t\treturn this.resolver.resolveChannel(chann).then(channel => {\n\t\t\tif (!channel) {\n\t\t\t\treturn Promise.reject(new Error(\"voice channel does not exist\"));\n\t\t\t}\n\n\t\t\tif (channel.type !== 2) {\n\t\t\t\treturn Promise.reject(new Error(\"channel is not a voice channel!\"));\n\t\t\t}\n\n\t\t\tvar joinSendWS = () => {\n\t\t\t\tthis.sendWS({\n\t\t\t\t\top: 4,\n\t\t\t\t\td: {\n\t\t\t\t\t\t\"guild_id\": channel.server.id,\n\t\t\t\t\t\t\"channel_id\": channel.id,\n\t\t\t\t\t\t\"self_mute\": false,\n\t\t\t\t\t\t\"self_deaf\": false\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar joinVoice = () => {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tvar session = this.sessionID, token, server = channel.server, endpoint;\n\n\t\t\t\t\tvar timeout = null;\n\n\t\t\t\t\tvar check = data => {\n\t\t\t\t\t\tif (data.t === \"VOICE_SERVER_UPDATE\") {\n\t\t\t\t\t\t\tif (data.d.guild_id !== server.id) return; // ensure it is the right server\n\t\t\t\t\t\t\ttoken = data.d.token;\n\t\t\t\t\t\t\tendpoint = data.d.endpoint;\n\t\t\t\t\t\t\tif (!token || !endpoint) return;\n\t\t\t\t\t\t\t/* var chan = new VoiceConnection(\n\t\t\t\t\t\t\t\tchannel, this.client, session, token, server, endpoint\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.voiceConnections.add(chan);\n\n\t\t\t\t\t\t\tchan.on(\"ready\", () => resolve(chan));\n\t\t\t\t\t\t\tchan.on(\"error\", reject);\n\t\t\t\t\t\t\tchan.on(\"close\", reject); */\n\n\t\t\t\t\t\t\tresolve({ channel, client: this.client, session, token,  server, endpoint });\n\n\t\t\t\t\t\t\tif (timeout) {\n\t\t\t\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.client.removeListener(\"raw\", check);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\ttimeout = setTimeout(() => {\n\t\t\t\t\t\tthis.client.removeListener(\"raw\", check);\n\t\t\t\t\t\treject(new Error(\"No voice server details within 10 seconds\"));\n\t\t\t\t\t}, 10000);\n\n\t\t\t\t\tthis.client.on(\"raw\", check);\n\t\t\t\t\tjoinSendWS();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar existingServerConn = this.voiceConnections.get(\"server\", channel.server); // same server connection\n\t\t\tif (existingServerConn) {\n\t\t\t\tjoinSendWS(); // Just needs to update by sending via WS, movement in cache will be handled by global handler\n\t\t\t\treturn Promise.resolve(existingServerConn);\n\t\t\t}\n\n\t\t\tif (!this.user.bot && this.voiceConnections.length > 0) { // nonbot, one voiceconn only, just like last time just disconnect\n\t\t\t\treturn this.leaveVoiceChannel().then(joinVoice);\n\t\t\t}\n\n\t\t\treturn joinVoice();\n\t\t});\n\t}\n\n\t// Backwards-compatible utility getter method for the first voice connection\n\t// Thanks to #q (@qeled) for suggesting this\n\tget voiceConnection() {\n\t\treturn this.voiceConnections[0];\n\t}\n\n\tgetGuildMembers(serverID, chunkCount) {\n\t\tthis.forceFetchCount[serverID] = chunkCount;\n\t\tif (this.forceFetchLength + 3 + serverID.length > 4000) { // 4096 max, '{\"op\":8,\"d\":{\"guild_id\":[],\"query\":\"\",\"limit\":0}}'.length = 49 plus some leeway\n\t\t\tthis.requestGuildMembers(this.forceFetchQueue);\n\t\t\tthis.forceFetchQueue = [serverID];\n\t\t\tthis.forceFetchLength = 1 + serverID.length + 3;\n\t\t} else {\n\t\t\tthis.forceFetchQueue.push(serverID);\n\t\t\tthis.forceFetchLength += serverID.length + 3;\n\t\t}\n\t}\n\n\trequestGuildMembers(serverID, query, limit) {\n\t\tthis.sendWS({op: 8,\n\t\t\td: {\n\t\t\t\tguild_id: serverID,\n\t\t\t\tquery: query || \"\",\n\t\t\t\tlimit: limit || 0\n\t\t\t}\n\t\t});\n\t}\n\n\tsyncGuild(guildID) {\n        if(this.guildSyncQueueLength + 3 + guildID.length > 4050) { // 4096 max, '{\"op\":12,\"d\":[]}'.length = 16 plus some leeway\n            this.sendWS({op: 12, d: this.guildSyncQueue});\n            this.guildSyncQueue = [guildID];\n            this.guildSyncQueueLength = 1 + guildID.length + 3;\n        } else {\n            this.guildSyncQueue.push(guildID);\n            this.guildSyncQueueLength += guildID.length + 3;\n        }\n\t}\n\n\tcheckReady() {\n\t\tif (!this.readyTime) {\n            if(this.guildSyncQueue.length > 0) {\n            \tthis.sendWS({op: 12, d: this.guildSyncQueue});\n                this.guildSyncQueue = [];\n                this.guildSyncQueueLength = 1;\n                return;\n            }\n            if(this.unsyncedGuilds > 0) {\n                return;\n            }\n\t\t\tif (this.forceFetchQueue.length > 0) {\n\t\t\t\tthis.requestGuildMembers(this.forceFetchQueue);\n\t\t\t\tthis.forceFetchQueue = [];\n\t\t\t\tthis.forceFetchLength = 1;\n\t\t\t} else {\n\t\t\t\tfor (var key in this.forceFetchCount) {\n\t\t\t\t\tif (this.forceFetchCount.hasOwnProperty(key)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.readyTime = Date.now();\n\t\t\t\tthis.client.emit(\"ready\");\n\t\t\t}\n\t\t}\n\t}\n\n\trestartServerCreateTimeout() {\n\t\tif (this.guildCreateTimeout) {\n\t\t\tclearTimeout(this.guildCreateTimeout);\n\t\t\tthis.guildCreateTimeout = null;\n\t\t}\n\t\tif (!this.readyTime) {\n\t\t\tthis.guildCreateTimeout = setTimeout(() => {\n\t\t\t\tthis.checkReady();\n\t\t\t}, this.client.options.guildCreateTimeout);\n\t\t}\n\t}\n\n\t// def createServer\n\tcreateServer(name, region = \"london\") {\n\t\tname = this.resolver.resolveString(name);\n\n\t\treturn this.apiRequest('post', Endpoints.SERVERS, true, { name, region })\n\t\t.then(res => {\n\t\t\t// valid server, wait until it is cached\n\t\t\treturn waitFor(() => this.servers.get(\"id\", res.id));\n\t\t});\n\t}\n\n\t//def joinServer\n\tjoinServer(invite) {\n\t\tinvite = this.resolver.resolveInviteID(invite);\n\t\tif (!invite) {\n\t\t\treturn Promise.reject(new Error(\"Not a valid invite\"));\n\t\t}\n\n\t\treturn this.apiRequest(\"post\", Endpoints.INVITE(invite), true)\n\t\t.then(res => {\n\t\t\t// valid server, wait until it is received via ws and cached\n\t\t\treturn waitFor(() => this.servers.get(\"id\", res.guild.id));\n\t\t});\n\t}\n\n\t//def updateServer\n\tupdateServer(server, options) {\n\t\tvar server = this.resolver.resolveServer(server);\n\t\tif (!server) {\n\t\t\treturn Promise.reject(new Error(\"server did not resolve\"));\n\t\t}\n\n\t\tvar newOptions = {\n\t\t\tname: options.name || server.name,\n\t\t\tregion: options.region || server.region\n\t\t};\n\n\t\tif (options.icon) {\n\t\t\tnewOptions.icon = this.resolver.resolveToBase64(options.icon);\n\t\t}\n\t\tif (options.splash) {\n\t\t\tnewOptions.splash = this.resolver.resolveToBase64(options.splash);\n\t\t}\n\t\tif (options.owner) {\n\t\t\tvar user = this.resolver.resolveUser(options.owner);\n\t\t\tif (!user) {\n\t\t\t\treturn Promise.reject(new Error(\"owner could not be resolved\"));\n\t\t\t}\n\t\t\toptions.owner_id = user.id;\n\t\t}\n\t\tif (options.verificationLevel) {\n\t\t\toptions.verification_level = user.verificationLevel;\n\t\t}\n\t\tif (options.afkChannel) {\n\t\t\tvar channel = this.resolver.resolveUser(options.afkChannel);\n\t\t\tif (!channel) {\n\t\t\t\treturn Promise.reject(new Error(\"afkChannel could not be resolved\"));\n\t\t\t}\n\t\t\toptions.afk_channel_id = channel.id;\n\t\t}\n\t\tif (options.afkTimeout) {\n\t\t\toptions.afk_timeout = user.afkTimeout;\n\t\t}\n\n\t\treturn this.apiRequest(\"patch\", Endpoints.SERVER(server.id), true, options)\n\t\t.then(res => {\n\t\t\t// wait until the name and region are updated\n\t\t\treturn waitFor(() =>\n\t\t\t\t(this.servers.get(\"name\", res.name) ? ((this.servers.get(\"name\", res.name).region === res.region) ? this.servers.get(\"id\", res.id) : false) : false));\n\t\t});\n\t}\n\n\t//def leaveServer\n\tleaveServer(srv) {\n\t\tvar server = this.resolver.resolveServer(srv);\n\t\tif (!server) {\n\t\t\treturn Promise.reject(new Error(\"server did not resolve\"));\n\t\t}\n\n\t\treturn this.apiRequest(\"del\", Endpoints.ME_SERVER(server.id), true);\n\t}\n\n\t//def deleteServer\n\tdeleteServer(srv) {\n\t\tvar server = this.resolver.resolveServer(srv);\n\t\tif (!server) {\n\t\t\treturn Promise.reject(new Error(\"server did not resolve\"));\n\t\t}\n\n\t\treturn this.apiRequest(\"del\", Endpoints.SERVER(server.id), true);\n\t}\n\n\t// def loginWithToken\n\t// email and password are optional\n\tloginWithToken(token, email, password) {\n\t  if (!this.setupCalled) {\n      this.setup();\n    }\n\n\t\tthis.state = ConnectionState.LOGGED_IN;\n\t\tthis.token = token;\n\t\tthis.email = email;\n\t\tthis.password = password;\n\n\t\tvar self = this;\n\t\treturn this.getGateway()\n\t\t.then(url => {\n\t\t\tself.token = self.client.options.bot && !self.token.startsWith(\"Bot \") ? `Bot ${self.token}` : self.token;\n\t\t\tself.createWS(url);\n\t\t\treturn self.token;\n\t\t});\n\t}\n\n\t// def login\n\tlogin(email, password) {\n\t\tvar client = this.client;\n\n\t\tif (!this.tokenCacher.done) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.login(email, password).then(resolve).catch(reject);\n\t\t\t\t}, 20);\n\t\t\t});\n\t\t} else {\n\t\t\tvar tk = this.tokenCacher.getToken(email, password);\n\t\t\tif ( tk ) {\n\t\t\t\tthis.client.emit(\"debug\", \"bypassed direct API login, used cached token\");\n\t\t\t\treturn this.loginWithToken(tk, email, password);\n\t\t\t}\n\t\t}\n\n\t\tif (this.state !== ConnectionState.DISCONNECTED && this.state !== ConnectionState.IDLE) {\n\t\t\treturn Promise.reject(new Error(\"already logging in/logged in/ready!\"));\n\t\t}\n\n\t\tthis.state = ConnectionState.LOGGING_IN;\n\n\t\treturn this.apiRequest(\"post\", Endpoints.LOGIN, false, {\n\t\t\temail,\n\t\t\tpassword\n\t\t})\n\t\t.then(res => {\n\t\t\tthis.client.emit(\"debug\", \"direct API login, cached token was unavailable\");\n\t\t\tvar token = res.token;\n\t\t\tthis.tokenCacher.setToken(email, password, token);\n\t\t\treturn this.loginWithToken(token, email, password);\n\t\t}, error => {\n\t\t\tthis.websocket = null;\n\t\t\tthrow error;\n\t\t})\n\t\t.catch(error => {\n\t\t\tthis.websocket = null;\n\t\t\tthis.state = ConnectionState.DISCONNECTED;\n\t\t\tclient.emit(\"disconnected\");\n\t\t\tthrow error;\n\t\t});\n\t}\n\n\t// def logout\n\tlogout() {\n\t\tif (this.state === ConnectionState.DISCONNECTED || this.state === ConnectionState.IDLE) {\n\t\t\treturn Promise.reject(new Error(\"Client is not logged in!\"));\n\t\t}\n\n\t\tvar disconnect = () => {\n\t\t\tif (this.websocket) {\n\t\t\t\tthis.websocket.close(1000);\n\t\t\t\tthis.websocket = null;\n\t\t\t}\n\t\t\tthis.token = null;\n\t\t\tthis.email = null;\n\t\t\tthis.password = null;\n\t\t\tthis.state = ConnectionState.DISCONNECTED;\n\t\t\treturn Promise.resolve();\n\t\t};\n\n\t\tif(!this.user.bot) {\n\t\t\treturn this.apiRequest(\"post\", Endpoints.LOGOUT, true)\n\t\t\t.then(disconnect);\n\t\t} else {\n\t\t\treturn disconnect();\n\t\t}\n\t}\n\n\t// def startPM\n\tstartPM(resUser) {\n\t\tvar user = this.resolver.resolveUser(resUser);\n\t\tif (!user) {\n\t\t\treturn Promise.reject(new Error(\"Unable to resolve resUser to a User\"));\n\t\t}\n\t\t\t\t// start the PM\n\t\treturn this.apiRequest(\"post\", Endpoints.ME_CHANNELS, true, {\n\t\t\trecipient_id: user.id\n\t\t})\n\t\t.then(res => {\n\t\t\treturn this.private_channels.add(new PMChannel(res, this.client));\n\t\t});\n\t}\n\n\t// def getGateway\n\tgetGateway() {\n\t\tif (this.gatewayURL) {\n\t\t\treturn Promise.resolve(this.gatewayURL);\n\t\t}\n\t\treturn this.apiRequest(\"get\", Endpoints.GATEWAY, true)\n\t\t.then(res => this.gatewayURL = res.url);\n\t}\n\n\t// def sendMessage\n\tsendMessage(where, _content, options = {}) {\n\t\tif (options.file) {\n\t\t\tif (typeof options.file !== \"object\") {\n\t\t\t\toptions.file = {\n\t\t\t\t\tfile: options.file\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (!options.file.name) {\n\t\t\t\tif (options.file.file instanceof String || typeof options.file.file === \"string\") {\n\t\t\t\t\toptions.file.name = require(\"path\").basename(options.file.file);\n\t\t\t\t} else if (options.file.file.path) {\n\t\t\t\t\t// fs.createReadStream()'s have .path that give the path. Not sure about other streams though.\n\t\t\t\t\toptions.file.name = require(\"path\").basename(options.file.file.path);\n\t\t\t\t} else {\n\t\t\t\t\toptions.file.name = \"default.png\"; // Just have to go with default filenames.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.resolver.resolveChannel(where)\n\t\t.then(destination => {\n\t\t\tvar content = this.resolver.resolveString(_content);\n\n\t\t\tif (this.client.options.disableEveryone || options.disableEveryone) {\n\t\t\t\tcontent = content.replace(/(@)(everyone|here)/g, '$1\\u200b$2');\n\t\t\t}\n\n\t\t\tif (options.file) {\n\t\t\t\treturn this.resolver.resolveFile(options.file.file)\n\t\t\t\t.then(file =>\n\t\t\t\t\tthis.apiRequest(\"post\", Endpoints.CHANNEL_MESSAGES(destination.id), true, {\n\t\t\t\t\t\tcontent: content,\n\t\t\t\t\t\ttts: options.tts,\n\t\t\t\t\t\tnonce: options.nonce\n\t\t\t\t\t}, {\n\t\t\t\t\t\tname: options.file.name,\n\t\t\t\t\t\tfile: file\n\t\t\t\t\t}).then(res => destination.messages.add(new Message(res, destination, this.client)))\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn this.apiRequest(\"post\", Endpoints.CHANNEL_MESSAGES(destination.id), true, {\n\t\t\t\t\tcontent: content,\n\t\t\t\t\ttts: options.tts,\n\t\t\t\t\tnonce: options.nonce\n\t\t\t\t})\n\t\t\t\t.then(res => destination.messages.add(new Message(res, destination, this.client)));\n\t\t\t}\n\t\t});\n\n\t}\n\n\t// def sendFile\n\tsendFile(where, _file, name, content) {\n\t\tif (!name) {\n\t\t\tif (_file instanceof String || typeof _file === \"string\") {\n\t\t\t\tname = require(\"path\").basename(_file);\n\t\t\t} else if (_file && _file.path) {\n\t\t\t\t// fs.createReadStream()'s have .path that give the path. Not sure about other streams though.\n\t\t\t\tname = require(\"path\").basename(_file.path);\n\t\t\t} else {\n\t\t\t\tname = \"default.png\"; // Just have to go with default filenames.\n\t\t\t}\n\t\t}\n\n\t\tif (content) {\n\t\t\tcontent = {\n\t\t\t\tcontent: this.resolver.resolveString(content)\n\t\t\t};\n\t\t\tif (this.client.options.disableEveryone) {\n\t\t\t\tcontent.content = content.content.replace(/(@)(everyone|here)/g, '$1\\u200b$2');\n\t\t\t}\n\t\t}\n\n\t\treturn this.resolver.resolveChannel(where)\n\t\t.then(channel =>\n\t\t\tthis.resolver.resolveFile(_file)\n\t\t\t.then(file =>\n\t\t\t\tthis.apiRequest(\"post\", Endpoints.CHANNEL_MESSAGES(channel.id), true, content, {\n\t\t\t\t\tname,\n\t\t\t\t\tfile\n\t\t\t\t}).then(res => channel.messages.add(new Message(res, channel, this.client)))\n\t\t\t)\n\t\t);\n\t}\n\n\t// def deleteMessage\n\tdeleteMessage(_message, options = {}) {\n\n\t\tvar message = this.resolver.resolveMessage(_message);\n\t\tif (!message) {\n\t\t\treturn Promise.reject(new Error(\"Supplied message did not resolve to a message!\"));\n\t\t}\n\n\t\tvar chain = options.wait ? delay(options.wait) : Promise.resolve();\n\t\treturn chain.then(() =>\n\t\t\tthis.apiRequest(\"del\", Endpoints.CHANNEL_MESSAGE(message.channel.id, message.id), true)\n\t\t)\n\t\t.then(() => message.channel.messages.remove(message));\n\t}\n\n\t// def deleteMessages\n\tdeleteMessages(_messages) {\n\t\tif (!_messages instanceof Array)\n\t\t\treturn Promise.reject(new Error(\"Messages provided must be in an array\"));\n\t\tif (_messages.length < 1)\n\t\t\treturn Promise.reject(new Error(\"You must provide at least one message to delete\"));\n\t\telse if (_messages.length === 1)\n\t\t\treturn this.deleteMessage(_messages[0]);\n\n\n\t\tvar messages = [];\n\t\tvar channel;\n\t\tfor (var _message of _messages) {\n\t\t\tvar message = this.resolver.resolveMessage(_message);\n\t\t\tif (!message)\n\t\t\t\treturn Promise.reject(new Error(\"Something other than a message could not be resolved in the array...\"));\n\t\t\tif (!message.server)\n\t\t\t\treturn Promise.reject(new Error(\"You can only bulk delete messages on guild channels\"));\n\n\t\t\t// ensure same channel\n\t\t\tif (!channel) {\n\t\t\t\tchannel = message.channel;\n\t\t\t} else {\n\t\t\t\tif (message.channel.id !== channel.id)\n\t\t\t\t\treturn Promise.reject(new Error(\"You can only bulk delete messages from the same channel at one time...\"));\n\t\t\t}\n\n\t\t\tmessages.push(message);\n\t\t}\n\n\t\treturn this.apiRequest(\"post\", `${Endpoints.CHANNEL_MESSAGES(channel.id)}/bulk_delete`, true, {\n\t\t\tmessages: messages.map(m => m.id)\n\t\t})\n\t\t.then(() => messages.forEach(m => channel.messages.remove(m)));\n\t}\n\n\t// def updateMessage\n\tupdateMessage(msg, _content, options = {}) {\n\n\t\tvar message = this.resolver.resolveMessage(msg);\n\n\t\tif (!message) {\n\t\t\treturn Promise.reject(new Error(\"Supplied message did not resolve to a message!\"));\n\t\t}\n\n\t\tvar content = this.resolver.resolveString(_content);\n\n\t\treturn this.apiRequest(\n\t\t\t\"patch\",\n\t\t\tEndpoints.CHANNEL_MESSAGE(message.channel.id, message.id),\n\t\t\ttrue,\n\t\t\t{\n\t\t\t\tcontent: content,\n\t\t\t\ttts: options.tts\n\t\t\t}\n\t\t)\n\t\t.then(res => message.channel.messages.update(\n\t\t\tmessage,\n\t\t\tnew Message(res, message.channel, this.client)\n\t\t));\n\t}\n\n\t// def getChannelLogs\n\tgetChannelLogs(_channel, limit = 50, options = {}) {\n\t\treturn this.resolver.resolveChannel(_channel)\n\t\t.then(channel => {\n\t\t\tvar qsObject = {limit};\n\t\t\tif (options.before) {\n\t\t\t\tconst res = this.resolver.resolveMessage(options.before);\n\t\t\t\tif (res) {\n\t\t\t\t\tqsObject.before = res.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (options.after) {\n\t\t\t\tconst res = this.resolver.resolveMessage(options.after);\n\t\t\t\tif (res) {\n\t\t\t\t\tqsObject.after = res.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (options.around) {\n\t\t\t\tconst res = this.resolver.resolveMessage(options.around);\n\t\t\t\tif (res) {\n\t\t\t\t\tqsObject.around = res.id\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.apiRequest(\n\t\t\t\t\"get\",\n\t\t\t\t`${Endpoints.CHANNEL_MESSAGES(channel.id)}?${qs.stringify(qsObject)}`,\n\t\t\t\ttrue\n\t\t\t)\n\t\t\t.then(res => res.map(\n\t\t\t\tmsg => channel.messages.add(new Message(msg, channel, this.client))\n\t\t\t));\n\t\t});\n\t}\n\n\t// def getMessage\n\tgetMessage(_channel, messageID) {\n\t\treturn this.resolver.resolveChannel(_channel)\n\t\t.then(channel => {\n\t\t\tif(!this.user.bot) {\n\t\t\t\treturn Promise.reject(new Error(\"Only OAuth bot accounts can use this function\"));\n\t\t\t}\n\n\t\t\tif(!(channel instanceof TextChannel || channel instanceof PMChannel)) {\n\t\t\t\treturn Promise.reject(new Error(\"Provided channel is not a Text or PMChannel\"));\n\t\t\t}\n\n\t\t\tvar msg = channel.messages.get(\"id\", messageID);\n\t\t\tif(msg) {\n\t\t\t\treturn Promise.resolve(msg);\n\t\t\t}\n\n\t\t\treturn this.apiRequest(\n\t\t\t\t\"get\",\n\t\t\t\t`${Endpoints.CHANNEL_MESSAGES(channel.id)}/${messageID}`,\n\t\t\t\ttrue\n\t\t\t)\n\t\t\t.then(res => channel.messages.add(\n\t\t\t\tnew Message(res, channel, this.client)\n\t\t\t));\n\t\t});\n\t}\n\n\t// def pinMessage\n\tpinMessage(msg) {\n\t\tvar message = this.resolver.resolveMessage(msg);\n\n\t\tif(!message) {\n\t\t\treturn Promise.reject(new Error(\"Supplied message did not resolve to a message\"));\n\t\t}\n\n\t\treturn this.apiRequest(\n\t\t\t\"put\",\n\t\t\t`${Endpoints.CHANNEL_PIN(msg.channel.id, msg.id)}`,\n\t\t\ttrue\n\t\t);\n\t}\n\n\t// def unpinMessage\n\tunpinMessage(msg) {\n\t\tvar message = this.resolver.resolveMessage(msg);\n\n\t\tif(!message) {\n\t\t\treturn Promise.reject(new Error(\"Supplied message did not resolve to a message\"));\n\t\t}\n\n\t\tif(!message.pinned) {\n\t\t\treturn Promise.reject(new Error(\"Supplied message is not pinned\"));\n\t\t}\n\n\t\treturn this.apiRequest(\n\t\t\t\"del\",\n\t\t\t`${Endpoints.CHANNEL_PIN(msg.channel.id, msg.id)}`,\n\t\t\ttrue\n\t\t);\n\t}\n\n\t// def getPinnedMessages\n\tgetPinnedMessages(_channel) {\n\t\treturn this.resolver.resolveChannel(_channel)\n\t\t.then(channel => {\n\t\t\treturn this.apiRequest(\n\t\t\t\t\"get\",\n\t\t\t\t`${Endpoints.CHANNEL_PINS(channel.id)}`,\n\t\t\t\ttrue\n\t\t\t)\n\t\t\t.then(res => res.map(\n\t\t\t\tmsg => channel.messages.add(new Message(msg, channel, this.client))\n\t\t\t));\n\t\t});\n\t}\n\n\t// def getBans\n\tgetBans(server) {\n\t\tserver = this.resolver.resolveServer(server);\n\n\t\treturn this.apiRequest(\"get\", Endpoints.SERVER_BANS(server.id), true)\n\t\t\t.then(res => res.map(\n\t\t\t\tban => this.users.add(new User(ban.user, this.client))\n\t\t\t));\n\t}\n\n\t// def createChannel\n\tcreateChannel(server, name, type = 0) {\n\n\t\tserver = this.resolver.resolveServer(server);\n\n\t\treturn this.apiRequest(\"post\", Endpoints.SERVER_CHANNELS(server.id), true, {\n\t\t\tname,\n\t\t\ttype\n\t\t})\n\t\t.then(res => {\n\t\t\tvar channel;\n\t\t\tif (res.type === 0) {\n\t\t\t\tchannel = new TextChannel(res, this.client, server);\n\t\t\t} else {\n\t\t\t\tchannel = new VoiceChannel(res, this.client, server);\n\t\t\t}\n\t\t\treturn server.channels.add(this.channels.add(channel));\n\t\t});\n\t}\n\n\t// def deleteChannel\n\tdeleteChannel(_channel) {\n\n\t\treturn this.resolver.resolveChannel(_channel)\n\t\t.then(channel =>\n\t\t\tthis.apiRequest(\"del\", Endpoints.CHANNEL(channel.id), true)\n\t\t\t.then(() => {\n\t\t\t\tif(channel.server) {\n\t\t\t\t\tchannel.server.channels.remove(channel);\n\t\t\t\t\tthis.channels.remove(channel);\n\t\t\t\t} else {\n\t\t\t\t\tthis.private_channels.remove(channel);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\t// def banMember\n\tbanMember(user, server, length = 1) {\n\t\tlet resolvedUser = this.resolver.resolveUser(user);\n\t\tserver = this.resolver.resolveServer(server);\n\n\t\tif (resolvedUser === null && typeof user === \"string\") {\n\t\t\tuser = {id: user};\n\t\t} else {\n\t\t\tuser = resolvedUser;\n\t\t}\n\n\t\treturn this.apiRequest(\n\t\t\t\"put\",\n\t\t\t`${Endpoints.SERVER_BANS(server.id)}/${user.id}?delete-message-days=${length}`,\n\t\t\ttrue\n\t\t);\n\t}\n\n\t// def unbanMember\n\tunbanMember(user, server) {\n\n\t\tserver = this.resolver.resolveServer(server);\n\t\tlet resolvedUser = this.resolver.resolveUser(user);\n\n    if (resolvedUser === null && typeof user === \"string\") {\n      user = {id: user};\n    } else {\n      user = resolvedUser;\n    }\n\n\t\treturn this.apiRequest(\"del\", `${Endpoints.SERVER_BANS(server.id)}/${user.id}`, true)\n\t}\n\n\t// def kickMember\n\tkickMember(user, server) {\n\t\tuser = this.resolver.resolveUser(user);\n\t\tserver = this.resolver.resolveServer(server);\n\n\t\treturn this.apiRequest(\"del\", `${Endpoints.SERVER_MEMBERS(server.id) }/${user.id}`, true);\n\t}\n\n\t// def moveMember\n\tmoveMember(user, channel) {\n\t\tuser = this.resolver.resolveUser(user);\n\t\treturn this.resolver.resolveChannel(channel).then(channel => {\n\t\t\tvar server = channel.server;\n\n\t\t\t// Make sure `channel` is a voice channel\n\t\t\tif (channel.type !== 2) {\n\t\t\t\tthrow new Error(\"Can't moveMember into a non-voice channel\");\n\t\t\t} else {\n\t\t\t\treturn this.apiRequest(\"patch\", `${Endpoints.SERVER_MEMBERS(server.id)}/${user.id}`, true, { channel_id: channel.id })\n\t\t\t\t.then(res => {\n\t\t\t\t\tuser.voiceChannel = channel;\n\t\t\t\t\treturn res;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t// def muteMember\n\tmuteMember(user, server) {\n\t\tuser = this.resolver.resolveUser(user);\n\t\tserver = this.resolver.resolveServer(server);\n\t\treturn this.apiRequest(\"patch\", `${Endpoints.SERVER_MEMBERS(server.id)}/${user.id}`, true, { mute: true });\n\t}\n\n\t// def unmuteMember\n\tunmuteMember(user, server) {\n\t\tuser = this.resolver.resolveUser(user);\n\t\tserver = this.resolver.resolveServer(server);\n\t\treturn this.apiRequest(\"patch\", `${Endpoints.SERVER_MEMBERS(server.id)}/${user.id}`, true, { mute: false });\n\t}\n\n\t// def deafenMember\n\tdeafenMember(user, server) {\n\t\tuser = this.resolver.resolveUser(user);\n\t\tserver = this.resolver.resolveServer(server);\n\t\treturn this.apiRequest(\"patch\", `${Endpoints.SERVER_MEMBERS(server.id)}/${user.id}`, true, { deaf: true });\n\t}\n\n\t// def undeafenMember\n\tundeafenMember(user, server) {\n\t\tuser = this.resolver.resolveUser(user);\n\t\tserver = this.resolver.resolveServer(server);\n\t\treturn this.apiRequest(\"patch\", `${Endpoints.SERVER_MEMBERS(server.id)}/${user.id}`, true, { deaf: false });\n\t}\n\n\t// def setNickname\n\tsetNickname(server, nick, user) {\n\t\tnick = nick || \"\";\n\t\tuser = this.resolver.resolveUser(user);\n\t\tserver = this.resolver.resolveServer(server);\n\t\treturn this.apiRequest(\"patch\", `${Endpoints.SERVER_MEMBERS(server.id)}/${user.id === this.user.id ? \"@me/nick\" : user.id}`, true, { nick: nick });\n\t}\n\n\t//def setNote\n\tsetNote(user, note) {\n\t\tuser = this.resolver.resolveUser(user);\n\t\tnote = note || \"\";\n\n\t\tif(!user) {\n\t\t\treturn Promise.reject(new Error(\"Failed to resolve user\"));\n\t\t}\n\n\t\treturn this.apiRequest(\"put\", `${Endpoints.ME_NOTES}/${user.id}`, true, { note: note });\n\t}\n\n\t// def createRole\n\tcreateRole(server, data) {\n\t\tserver = this.resolver.resolveServer(server);\n\n\t\treturn this.apiRequest(\"post\", Endpoints.SERVER_ROLES(server.id), true)\n\t\t.then(res => {\n\t\t\tvar role = server.roles.add(new Role(res, server, this.client));\n\n\t\t\tif (data) {\n\t\t\t\treturn this.updateRole(role, data);\n\t\t\t}\n\t\t\treturn role;\n\t\t});\n\t}\n\t// def updateRole\n\tupdateRole(role, data) {\n\n\t\trole = this.resolver.resolveRole(role);\n\t\tvar server = this.resolver.resolveServer(role.server);\n\n\t\tvar newData = {\n\t\t\tcolor: \"color\" in data ? data.color : role.color,\n\t\t\thoist: \"hoist\" in data ? data.hoist : role.hoist,\n\t\t\tname: \"name\" in data ? data.name : role.name,\n\t\t\tposition: \"position\" in data ? data.position : role.position,\n\t\t\tpermissions: \"permissions\" in data ? data.permissions : role.permissions,\n\t\t\tmentionable: \"mentionable\" in data ? data.mentionable : role.mentionable\n\t\t};\n\n\t\tif (data.permissions) {\n\t\t\tnewData.permissions = 0;\n\t\t\tfor (var perm of data.permissions) {\n\t\t\t\tif (perm instanceof String || typeof perm === \"string\") {\n\t\t\t\t\tnewData.permissions |= (Permissions[perm] || 0);\n\t\t\t\t} else {\n\t\t\t\t\tnewData.permissions |= perm;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.apiRequest(\"patch\", `${Endpoints.SERVER_ROLES(server.id)}/${role.id}`, true, newData)\n\t\t.then(res => {\n\t\t\treturn server.roles.update(role, new Role(res, server, this.client));\n\t\t});\n\t}\n\n\t// def deleteRole\n\tdeleteRole(role) {\n\t\tif (role.server.id === role.id) {\n\t\t\treturn Promise.reject(new Error(\"Stop trying to delete the @everyone role. It is futile\"));\n\t\t} else {\n\t\t\treturn this.apiRequest(\"del\", `${Endpoints.SERVER_ROLES(role.server.id)}/${role.id}`, true);\n\t\t}\n\t}\n\n\t//def addMemberToRole\n\taddMemberToRole(member, roles) {\n\t\tmember = this.resolver.resolveUser(member);\n\n\t\tif (!member) {\n\t\t\treturn Promise.reject(new Error(\"user not found\"));\n\t\t}\n\n\t\tif (!Array.isArray(roles) || roles.length === 0) {\n\t\t\troles = this.resolver.resolveRole(roles);\n\t\t\tif (roles) {\n\t\t\t\troles = [roles];\n\t\t\t} else {\n\t\t\t\treturn Promise.reject(new Error(\"invalid array of roles\"));\n\t\t\t}\n\t\t} else {\n\t\t\troles = roles.map(r => this.resolver.resolveRole(r));\n\t\t}\n\n\t\tif (roles.some(role => !role.server.memberMap[member.id])) {\n\t\t\treturn Promise.reject(new Error(\"Role does not exist on same server as member\"));\n\t\t}\n\n\t\tvar roleIDs = roles[0].server.memberMap[member.id].roles.map(r => (r && r.id) || r);\n\n\t\tfor (var i = 0; i < roles.length; i++) {\n\t\t\tif (!~roleIDs.indexOf(roles[i].id)) {\n\t\t\t\troleIDs.push(roles[i].id);\n\t\t\t};\n\t\t};\n\n\t\treturn this.apiRequest(\n\t\t\t\"patch\",\n\t\t\t`${Endpoints.SERVER_MEMBERS(roles[0].server.id)}/${member.id}`,\n\t\t\ttrue,\n\t\t\t{\n\t\t\t\troles: roleIDs\n\t\t\t}\n\t\t);\n\t}\n\n\tmemberHasRole(member, role) {\n\t\trole = this.resolver.resolveRole(role);\n\t\tmember = this.resolver.resolveUser(member);\n\n\t\tif (!role) {\n\t\t\tthrow new Error(\"invalid role\");\n\t\t}\n\t\tif (!member) {\n\t\t\tthrow new Error(\"user not found\");\n\t\t}\n\n\t\tvar roledata = role.server.rolesOf(member);\n\t\tif (roledata) {\n\t\t\tfor (var r of roledata) {\n\t\t\t\tif (r.id == role.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t//def removeMemberFromRole\n\tremoveMemberFromRole(member, roles) {\n\t\tmember = this.resolver.resolveUser(member);\n\n\t\tif (!member) {\n\t\t\treturn Promise.reject(new Error(\"user not found\"));\n\t\t}\n\n\t\tif (!Array.isArray(roles) || roles.length === 0) {\n\t\t\troles = this.resolver.resolveRole(roles);\n\t\t\tif (roles) {\n\t\t\t\troles = [roles];\n\t\t\t} else {\n\t\t\t\treturn Promise.reject(new Error(\"invalid array of roles\"));\n\t\t\t}\n\t\t} else {\n\t\t\troles = roles.map(r => this.resolver.resolveRole(r));\n\t\t}\n\n\t\tvar roleIDs = roles[0].server.memberMap[member.id].roles.map(r => (r && r.id) || r);\n\n\t\tfor (var role of roles) {\n\t\t\tif (!role.server.memberMap[member.id]) {\n\t\t\t\treturn Promise.reject(new Error(\"member not in server\"));\n\t\t\t}\n\t\t\tfor (var item in roleIDs) {\n\t\t\t\tif (roleIDs[item] === role.id) {\n\t\t\t\t\troleIDs.splice(item, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.apiRequest(\n\t\t\t\"patch\",\n\t\t\t`${Endpoints.SERVER_MEMBERS(roles[0].server.id)}/${member.id}`,\n\t\t\ttrue,\n\t\t\t{\n\t\t\t\troles: roleIDs\n\t\t\t}\n\t\t);\n\t}\n\n\t// def createInvite\n\tcreateInvite(chanServ, options) {\n\t\treturn this.resolver.resolveChannel(chanServ)\n\t\t.then(channel => {\n\t\t\tif (!options) {\n\t\t\t\toptions = {\n\t\t\t\t\tvalidate: null\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\toptions.max_age = options.maxAge || 0;\n\t\t\t\toptions.max_uses = options.maxUses || 0;\n\t\t\t\toptions.temporary = options.temporary || false;\n\t\t\t\toptions.xkcdpass = options.xkcd || false;\n\t\t\t}\n\n\t\t\treturn this.apiRequest(\"post\", Endpoints.CHANNEL_INVITES(channel.id), true, options)\n\t\t\t.then(res => new Invite(res, this.channels.get(\"id\", res.channel.id), this.client));\n\t\t});\n\t}\n\n\t//def deleteInvite\n\tdeleteInvite(invite) {\n\t\tinvite = this.resolver.resolveInviteID(invite);\n\t\tif (!invite) {\n\t\t\tthrow new Error(\"Not a valid invite\");\n\t\t}\n\t\treturn this.apiRequest(\"del\", Endpoints.INVITE(invite), true);\n\t}\n\n\t//def getInvite\n\tgetInvite(invite) {\n\t\tinvite = this.resolver.resolveInviteID(invite);\n\t\tif (!invite) {\n\t\t\treturn Promise.reject(new Error(\"Not a valid invite\"));\n\t\t}\n\n\t\treturn this.apiRequest(\"get\", Endpoints.INVITE(invite), true)\n\t\t.then(res => {\n\t\t\tif (!this.channels.has(\"id\", res.channel.id)) {\n\t\t\t\treturn new Invite(res, null, this.client);\n\t\t\t}\n\t\t\treturn this.apiRequest(\"post\", Endpoints.CHANNEL_INVITES(res.channel.id), true, {validate: invite})\n\t\t\t.then(res2 => new Invite(res2, this.channels.get(\"id\", res.channel.id), this.client));\n\t\t});\n\t}\n\n\t//def getInvites\n\tgetInvites(channel) {\n\t\tif (!(channel instanceof Channel)) {\n\t\t\tvar server = this.resolver.resolveServer(channel);\n\t\t\tif (server) {\n\t\t\t\treturn this.apiRequest(\"get\", Endpoints.SERVER_INVITES(server.id), true)\n\t\t\t\t.then(res => {\n\t\t\t\t\treturn res.map(data => new Invite(data, this.channels.get(\"id\", data.channel.id), this.client));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn this.resolver.resolveChannel(channel)\n\t\t.then(channel => {\n\t\t\treturn this.apiRequest(\"get\", Endpoints.CHANNEL_INVITES(channel.id), true)\n\t\t\t.then(res => {\n\t\t\t\treturn res.map(data => new Invite(data, this.channels.get(\"id\", data.channel.id), this.client));\n\t\t\t});\n\t\t});\n\t}\n\n\t//def overwritePermissions\n\toverwritePermissions(channel, role, updated) {\n\t\treturn this.resolver.resolveChannel(channel)\n\t\t.then(channel => {\n\t\t\tif (!channel instanceof ServerChannel) {\n\t\t\t\treturn Promise.reject(new Error(\"Not a server channel\"));\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tallow: 0,\n\t\t\t\tdeny: 0\n\t\t\t};\n\n\t\t\tif (role instanceof String || typeof role === \"string\") {\n\t\t\t\trole = this.resolver.resolveUser(role) || this.resolver.resolveRole(role);\n\t\t\t}\n\n\t\t\tif (role instanceof User) {\n\t\t\t\tdata.id = role.id;\n\t\t\t\tdata.type = \"member\";\n\t\t\t} else if (role instanceof Role) {\n\t\t\t\tdata.id = role.id;\n\t\t\t\tdata.type = \"role\";\n\t\t\t} else {\n\t\t\t\treturn Promise.reject(new Error(\"Role could not be resolved\"));\n\t\t\t}\n\n\t\t\tvar previousOverwrite = channel.permissionOverwrites.get(\"id\", data.id);\n\n\t\t\tif (previousOverwrite) {\n\t\t\t\tdata.allow |= previousOverwrite.allow;\n\t\t\t\tdata.deny |= previousOverwrite.deny;\n\t\t\t}\n\n\t\t\tfor (var perm in updated) {\n\t\t\t\tif (updated[perm] === true) {\n\t\t\t\t\tdata.allow |= (Permissions[perm] || 0);\n\t\t\t\t\tdata.deny &= ~(Permissions[perm] || 0);\n\t\t\t\t} else if (updated[perm] === false) {\n\t\t\t\t\tdata.allow &= ~(Permissions[perm] || 0);\n\t\t\t\t\tdata.deny |= (Permissions[perm] || 0);\n\t\t\t\t} else {\n\t\t\t\t\tdata.allow &= ~(Permissions[perm] || 0);\n\t\t\t\t\tdata.deny &= ~(Permissions[perm] || 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.apiRequest(\n\t\t\t\t\"put\",\n\t\t\t\t`${Endpoints.CHANNEL_PERMISSIONS(channel.id)}/${data.id}`,\n\t\t\t\ttrue,\n\t\t\t\tdata\n\t\t\t);\n\t\t});\n\t}\n\n\t//def setStatus\n\tsetStatus(idleStatus, game) {\n\n\t\tif (idleStatus === \"online\" || idleStatus === \"here\" || idleStatus === \"available\") {\n\t\t\tthis.idleStatus = null;\n\t\t}\n\t\telse if (idleStatus === \"idle\" || idleStatus === \"away\") {\n\t\t\tthis.idleStatus = Date.now();\n\t\t}\n\t\telse {\n\t\t\tthis.idleStatus = this.idleStatus || null; //undefined\n\t\t}\n\n\t\t// convert undefined and empty string to null\n\t\tif (typeof game === \"string\" && !game.length) game = null;\n\n\t\tthis.game = game === null ? null : !game ? this.game || null : typeof game === \"string\" ? {name: game} : game;\n\n\t\tvar packet = {\n\t\t\top: 3,\n\t\t\td: {\n\t\t\t\tidle_since: this.idleStatus,\n\t\t\t\tgame: this.game\n\t\t\t}\n\t\t};\n\n\t\tthis.sendWS(packet);\n\n\t\tthis.user.status = this.idleStatus ? \"idle\" : \"online\";\n\t\tthis.user.game = this.game;\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t//def sendTyping\n\tsendTyping(channel) {\n\t\treturn this.resolver.resolveChannel(channel).then(channel =>\n\t\t\tthis.apiRequest(\"post\", Endpoints.CHANNEL(channel.id) + \"/typing\", true)\n\t\t);\n\t}\n\n\t//def startTyping\n\tstartTyping(channel) {\n\t\treturn this.resolver.resolveChannel(channel)\n\t\t.then(channel => {\n\n\t\t\tif (this.intervals.typing[channel.id]) {\n\t\t\t\t// typing interval already exists, leave it alone\n\t\t\t\tthrow new Error(\"Already typing in that channel\");\n\t\t\t}\n\n\t\t\tthis.intervals.typing[channel.id] = setInterval(\n\t\t\t\t() => this.sendTyping(channel)\n\t\t\t\t.catch(error => this.client.emit(\"error\", error)),\n\t\t\t\t4000\n\t\t\t);\n\n\t\t\treturn this.sendTyping(channel);\n\t\t});\n\n\t}\n\n\t//def stopTyping\n\tstopTyping(channel) {\n\t\treturn this.resolver.resolveChannel(channel)\n\t\t.then(channel => {\n\n\t\t\tif (!this.intervals.typing[channel.id]) {\n\t\t\t\t// typing interval doesn\"t exist\n\t\t\t\tthrow new Error(\"Not typing in that channel\");\n\t\t\t}\n\n\t\t\tclearInterval(this.intervals.typing[channel.id]);\n\t\t\tthis.intervals.typing[channel.id] = false;\n\n\t\t});\n\t}\n\n\t//def updateDetails\n\tupdateDetails(data) {\n\t\tif (!this.user.bot && !(this.email || data.email)) {\n\t\t\tthrow new Error(\"Must provide email since a token was used to login\");\n\t\t}\n\n\t\tlet options = {};\n\n\t\tif (data.username) {\n\t\t\toptions.username = data.username;\n\t\t} else {\n\t\t\toptions.username = this.user.username;\n\t\t}\n\n\t\tif (data.avatar) {\n\t\t\toptions.avatar = this.resolver.resolveToBase64(data.avatar);\n\t\t}\n\n\t\tif (this.email || data.email) {\n\t\t\toptions.email = data.email || this.email;\n\t\t\toptions.new_password = data.newPassword || null;\n\t\t\toptions.password = data.password || this.password;\n\t\t}\n\n\t\treturn this.apiRequest(\"patch\", Endpoints.ME, true, options);\n\t}\n\n\t//def setAvatar\n\tsetAvatar(avatar) {\n\t\treturn this.updateDetails({avatar});\n\t}\n\n\t//def setUsername\n\tsetUsername(username) {\n\t\treturn this.updateDetails({username});\n\t}\n\n\t//def setChannelTopic\n\tsetChannelTopic(channel, topic = \"\") {\n\t\ttopic = topic || \"\";\n\n\t\treturn this.updateChannel(channel, {topic: topic});\n\t}\n\n\t//def setChannelName\n\tsetChannelName(channel, name) {\n\t\tname = name || \"unnamed-channel\";\n\n\t\treturn this.updateChannel(channel, {name: name});\n\t}\n\n\t//def setChannelPosition\n\tsetChannelPosition(channel, position) {\n\t\tposition = position || 0;\n\n\t\treturn this.updateChannel(channel, {position: position});\n\t}\n\n\t//def setChannelUserLimit\n\tsetChannelUserLimit(channel, limit) {\n\t\tlimit = limit || 0; // default 0 = no limit\n\n\t\treturn this.updateChannel(channel, {userLimit: limit})\n\t}\n\n\t//def setChannelBitrate\n\tsetChannelBitrate(channel, kbitrate) {\n\t\tkbitrate = kbitrate || 64; // default 64kbps\n\n\t\treturn this.updateChannel(channel, {bitrate: kbitrate});\n\t}\n\n\t//def updateChannel\n\tupdateChannel(channel, data) {\n\t\treturn this.resolver.resolveChannel(channel).then(channel => {\n\t\t\tif (!channel) {\n\t\t\t\treturn Promise.reject(new Error(\"Failed to resolve channel\"));\n\t\t\t}\n\n\t\t\tdata = {\n\t\t\t\tname: data.name || channel.name,\n\t\t\t\ttopic: data.topic || channel.topic,\n\t\t\t\tposition: (data.position ? data.position : channel.position),\n\t\t\t\tuser_limit: (data.userLimit ? data.userLimit : channel.userLimit),\n\t\t\t\tbitrate: (data.bitrate ? data.bitrate : channel.bitrate ? channel.bitrate : undefined)\n\t\t\t};\n\n\t\t\tif (data.position < 0) {\n\t\t\t\treturn Promise.reject(new Error(\"Position cannot be less than 0\"));\n\t\t\t}\n\n\t\t\tif (data.user_limit < 0 || data.user_limit > 99) {\n\t\t\t\treturn Promise.reject(new Error(\"User limit must be between 0-99\"));\n\t\t\t}\n\n\t\t\tif (data.kbitrate < 8 || data.kbitrate > 96) {\n\t\t\t\treturn Promise.reject(new Error(\"Bitrate must be between 8-96kbps\"));\n\t\t\t}\n\n\t\t\tif (data.bitrate) {\n\t\t\t\tdata.bitrate *= 1000; // convert to bits before sending\n\t\t\t}\n\n\t\t\treturn this.apiRequest(\"patch\", Endpoints.CHANNEL(channel.id), true, data)\n\t\t\t.then(res => {\n\t\t\t\tchannel.name = data.name;\n\t\t\t\tchannel.topic = data.topic;\n\t\t\t\tchannel.position = data.position;\n\t\t\t\tchannel.userLimit = data.user_limit;\n\t\t\t\tchannel.bitrate = Math.ceil(data.bitrate / 1000);\n\t\t\t\tchannel._bitrate = data.bitrate;\n\t\t\t});\n\t\t});\n\t}\n\n\t//def addFriend\n\taddFriend(user) {\n\t\tif (this.user.bot) return Promise.reject(new Error(\"user is a bot, bot's do not have friends support\"));\n\n\t\tvar id;\n\t\tif (user instanceof String || typeof user === \"string\")\n\t\t\tid = user;\n\t\telse if (user instanceof User) {\n\t\t\tuser = this.resolver.resolveUser(user);\n\t\t\tid = user.id\n\t\t} else {\n\t\t\tif (user.username && user.discriminator) // add by username and discriminator (pass in an object)\n\t\t\t\treturn this.apiRequest(\"put\", Endpoints.FRIENDS, true, user);\n\t\t\telse\n\t\t\t\treturn Promise.reject(\"invalid user\")\n\t\t}\n\n\t\treturn this.apiRequest(\"put\", `${Endpoints.FRIENDS}/${id}`, true, {});\n\t}\n\n\t//def removeFriend\n\tremoveFriend(user) {\n\t\tif (this.user.bot) return Promise.reject(new Error(\"user is a bot, bot's do not have friends support\"));\n\n\t\tuser = this.resolver.resolveUser(user);\n\n\t\treturn this.apiRequest(\"delete\", `${Endpoints.FRIENDS}/${user.id}`, true);\n\t}\n\n\tgetServerWebhooks(server) {\n\t\tserver = this.resolver.resolveServer(server);\n\n\t\tif (!server) {\n\t\t\treturn Promise.reject(new Error(\"Failed to resolve server\"));\n\t\t}\n\n\t\treturn this.apiRequest(\"get\", Endpoints.SERVER_WEBHOOKS(server.id), true)\n\t\t\t.then(res => res.map(\n\t\t\t\twebhook => {\n\t\t\t\t\tlet channel = this.channels.get(\"id\", webhook.channel_id);\n\t\t\t\t\treturn channel.webhooks.add(new Webhook(\n\t\t\t\t\t\twebhook,\n\t\t\t\t\t\tserver,\n\t\t\t\t\t\tchannel,\n\t\t\t\t\t\tthis.users.get(\"id\", webhook.user.id)\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t));\n\t}\n\n\tgetChannelWebhooks(channel) {\n\t\treturn this.resolver.resolveChannel(channel).then(channel => {\n\t\t\tif (!channel) {\n\t\t\t\treturn Promise.reject(new Error(\"Failed to resolve channel\"));\n\t\t\t}\n\n\t\t\treturn this.apiRequest(\"get\", Endpoints.CHANNEL_WEBHOOKS(channel.id), true)\n\t\t\t\t.then(res => res.map(\n\t\t\t\t\twebhook => channel.webhooks.add(new Webhook(\n\t\t\t\t\t\twebhook,\n\t\t\t\t\t\tthis.servers.get(\"id\", webhook.guild_id),\n\t\t\t\t\t\tchannel,\n\t\t\t\t\t\tthis.users.get(\"id\", webhook.user.id)\n\t\t\t\t\t))\n\t\t\t\t));\n\t\t})\n\t}\n\n\teditWebhook(webhook, options = {}) {\n\t\treturn this.resolver.resolveWebhook(webhook).then(webhook => {\n\t\t\tif (!webhook) {\n\t\t\t\treturn Promise.reject(new Error(\" Failed to resolve webhook\"))\n\t\t\t}\n\n\t\t\tif (options.hasOwnProperty(\"avatar\")) {\n\t\t\t\toptions.avatar = this.resolver.resolveToBase64(options.avatar);\n\t\t\t}\n\n\t\t\treturn this.apiRequest(\"patch\", Endpoints.WEBHOOK(webhook.id), true, options)\n\t\t\t\t.then(res => {\n\t\t\t\t\twebhook.name = res.name;\n\t\t\t\t\twebhook.avatar = res.hasOwnProperty('avatar') ? res.avatar : webhook.avatar;\n\t\t\t\t});\n\t\t})\n\t}\n\n\tcreateWebhook(channel, options = {}) {\n\t\treturn this.resolver.resolveChannel(channel)\n\t\t\t.then(destination => {\n\t\t\t\tif (!channel) {\n\t\t\t\t\treturn Promise.reject(new Error(\" Failed to resolve channel\"))\n\t\t\t\t}\n\n\t\t\t\tif (options.hasOwnProperty(\"avatar\")) {\n\t\t\t\t\toptions.avatar = this.resolver.resolveToBase64(options.avatar);\n\t\t\t\t}\n\n\t\t\t\treturn this.apiRequest(\"post\", Endpoints.CHANNEL_WEBHOOKS(destination.id), true, options)\n\t\t\t\t\t.then(webhook => channel.webhooks.add(new Webhook(\n\t\t\t\t\t\twebhook,\n\t\t\t\t\t\tthis.servers.get(\"id\", webhook.guild_id),\n\t\t\t\t\t\tchannel,\n\t\t\t\t\t\tthis.users.get(\"id\", webhook.user.id)\n\t\t\t\t\t)));\n\t\t\t});\n\t}\n\n\tdeleteWebhook(webhook) {\n\t\treturn this.resolver.resolveWebhook(webhook).then(webhook => {\n\t\t\tif (!webhook) {\n\t\t\t\treturn Promise.reject(new Error(\" Failed to resolve webhook\"))\n\t\t\t}\n\n\t\t\treturn this.apiRequest(\"delete\", Endpoints.WEBHOOK(webhook.id), true)\n\t\t\t\t.then(() => {\n\t\t\t\t\twebhook.channel.webhooks.remove(webhook);\n\t\t\t\t});\n\t\t})\n\t}\n\n\tsendWebhookMessage(webhook, _content, options = {}) {\n\t\treturn this.resolver.resolveWebhook(webhook)\n\t\t\t.then(destination => {\n\t\t\t\tvar content = this.resolver.resolveString(_content);\n\n\t\t\t\tif (this.client.options.disableEveryone || options.disableEveryone) {\n\t\t\t\t\tcontent = content.replace(/(@)(everyone|here)/g, '$1\\u200b$2');\n\t\t\t\t}\n\n\t\t\t\tif (!options.hasOwnProperty(\"username\")) {\n\t\t\t\t\toptions.username = this.user.username;\n\t\t\t\t}\n\n\t\t\t\tlet slack;\n\t\t\t\tif (options.hasOwnProperty(\"slack\")) {\n\t\t\t\t\tslack = options.slack;\n\t\t\t\t\tdelete options[\"slack\"];\n\t\t\t\t}\n\n\t\t\t\toptions.content = _content;\n\n\t\t\t\treturn this.apiRequest(\n\t\t\t\t\t\"post\",\n\t\t\t\t\t`${Endpoints.WEBHOOK_MESSAGE(destination.id, destination.token)}${slack ? \"/slack\" : \"\"}?wait=true`,\n\t\t\t\t\ttrue,\n\t\t\t\t\toptions\n\t\t\t\t)\n\t\t\t});\n\n\t}\n\n\t//def getOAuthApplication\n\tgetOAuthApplication(appID) {\n\t\tappID = appID || \"@me\";\n\t\treturn this.apiRequest(\"get\", Endpoints.OAUTH2_APPLICATION(appID), true);\n\t}\n\n\t//def ack\n\tack(msg) {\n\t\tmsg = this.resolver.resolveMessage(msg);\n\n\t\tif (!msg) {\n\t\t\tPromise.reject(new Error(\"Message does not exist\"));\n\t\t}\n\n\t\treturn this.apiRequest(\"post\", Endpoints.CHANNEL_MESSAGE(msg.channel.id, msg.id) + \"/ack\", true);\n\t}\n\n\tsendWS(object) {\n\t\tif (this.websocket) {\n\t\t\tthis.websocket.send(JSON.stringify(object));\n\t\t}\n\t}\n\n\tcreateWS(url) {\n\t\tif (this.websocket) {\n\t\t\treturn false;\n\t\t}\n\t\tif(!url.endsWith(\"/\")) {\n\t\t\turl += \"/\";\n\t\t}\n\t\turl += \"?encoding=json&v=\" + GATEWAY_VERSION;\n\n\t\tthis.websocket = new WebSocket(url);\n\n\t\tthis.websocket.onopen = () => {\n\t\t};\n\n\t\tthis.websocket.onclose = (event) => {\n\t\t\tthis.websocket = null;\n\t\t\tthis.state = ConnectionState.DISCONNECTED;\n\t\t\tif(event && event.code) {\n                this.client.emit(\"warn\", \"WS close: \" + event.code);\n                var err;\n                if(event.code === 4001) {\n                    err = new Error(\"Gateway received invalid OP code\");\n                } else if(event.code === 4005) {\n                    err = new Error(\"Gateway received invalid message\");\n                } else if(event.code === 4003) {\n                    err = new Error(\"Not authenticated\");\n                } else if(event.code === 4004) {\n                    err = new Error(\"Authentication failed\");\n                } else if(event.code === 4005) {\n                    err = new Error(\"Already authenticated\");\n                } if(event.code === 4006 || event.code === 4009) {\n                    err = new Error(\"Invalid session\");\n                } else if(event.code === 4007) {\n                    this.sequence = 0;\n                    err = new Error(\"Invalid sequence number\");\n                } else if(event.code === 4008) {\n                    err = new Error(\"Gateway connection was ratelimited\");\n                } else if(event.code === 4010) {\n                    err = new Error(\"Invalid shard key\");\n                }\n                if(err) {\n                \tthis.client.emit(\"error\", err);\n                }\n            }\n\t\t\tthis.disconnected(this.client.options.autoReconnect);\n\t\t};\n\n\t\tthis.websocket.onerror = e => {\n\t\t\tthis.client.emit(\"error\", e);\n\t\t\tthis.websocket = null;\n\t\t\tthis.state = ConnectionState.DISCONNECTED;\n\t\t\tthis.disconnected(this.client.options.autoReconnect);\n\t\t};\n\n\t\tthis.websocket.onmessage = e => {\n\t\t\tif (e.data instanceof Buffer) {\n\t\t\t\tif (!zlib) zlib = require(\"zlib\");\n\t\t\t\te.data = zlib.inflateSync(e.data).toString();\n\t\t\t}\n\n\t\t\tvar packet;\n\t\t\ttry {\n\t\t\t\tpacket = JSON.parse(e.data);\n\t\t\t} catch (e) {\n\t\t\t\tthis.client.emit(\"error\", e);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.client.emit(\"raw\", packet);\n\n\t\t\tif(packet.s) {\n                this.sequence = packet.s;\n            }\n\n\t\t\tswitch(packet.op) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.processPacket(packet);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tconsole.log(\"set it to true 1\");\n          this.heartbeatAcked = true;\n\t\t\t\t\tthis.heartbeat();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tthis.disconnected(true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tthis.sessionID = null;\n\t\t\t\t\tthis.sequence = 0;\n\t\t\t\t\tthis.identify();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 10:\n\t\t\t\t\tif(this.sessionID) {\n\t\t\t\t\t\tthis.resume();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.identify();\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(\"set it to true 10 1\");\n\t\t\t\t\tthis.heartbeatAcked = true; // start off without assuming we didn't get a missed heartbeat acknowledge right away;\n\t\t\t\t\tthis.heartbeat();\n\t\t\t\t\tconsole.log(\"set it to true 10 2\");\n\t\t\t\t\tthis.heartbeatAcked = true;\n\t\t\t\t\tthis.intervals.kai = setInterval(() => this.heartbeat(), packet.d.heartbeat_interval);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 11:\n\t\t\t\t\tconsole.log(\"set heartbeatAcked to true because heartbeat was acked.\");\n\t\t\t\t\tthis.heartbeatAcked = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.client.emit(\"unknown\", packet);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\t}\n\n\tprocessPacket(packet) {\n\t\tvar client = this.client;\n\t\tvar data = packet.d;\n\t\tswitch (packet.t) {\n\t\t\tcase PacketType.RESUMED:\n\t\t\tcase PacketType.READY:\n\t\t\t\tthis.autoReconnectInterval = 1000;\n\t\t\t\tthis.state = ConnectionState.READY;\n\n\t\t\t\tif(packet.t === PacketType.RESUMED) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis.sessionID = data.session_id;\n\t\t\t\tvar startTime = Date.now();\n\n\t\t\t\tthis.user = this.users.add(new User(data.user, client));\n\n\t\t\t\tthis.forceFetchCount = {};\n\t\t\t\tthis.forceFetchQueue = [];\n\t\t\t\tthis.forceFetchLength = 1;\n\n\t\t\t\tdata.guilds.forEach(server => {\n\t\t\t\t\tif (!server.unavailable) {\n\t\t\t\t\t\tserver = this.servers.add(new Server(server, client));\n\t                    if(client.options.bot === false) {\n\t                        this.unsyncedGuilds++;\n\t                        this.syncGuild(server.id);\n\t                    }\n\t\t\t\t\t\tif (this.client.options.forceFetchUsers && server.members && server.members.length < server.memberCount) {\n\t\t\t\t\t\t\tthis.getGuildMembers(server.id, Math.ceil(server.memberCount / 1000));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclient.emit(\"debug\", \"server \" + server.id + \" was unavailable, could not create (ready)\");\n\t\t\t\t\t\tthis.unavailableServers.add(server);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tdata.private_channels.forEach(pm => {\n\t\t\t\t\tthis.private_channels.add(new PMChannel(pm, client));\n\t\t\t\t});\n\t\t\t\tif (!data.user.bot) { // bots dont have friends\n\t\t\t\t\tdata.relationships.forEach(friend => {\n\t\t\t\t\t\tif (friend.type === 1) { // is a friend\n\t\t\t\t\t\t\tthis.friends.add(new User(friend.user, client));\n\t\t\t\t\t\t} else if (friend.type === 2) { // incoming friend requests\n\t\t\t\t\t\t\tthis.blocked_users.add(new User(friend.user, client));\n\t\t\t\t\t\t} else if (friend.type === 3) { // incoming friend requests\n\t\t\t\t\t\t\tthis.incoming_friend_requests.add(new User(friend.user, client));\n\t\t\t\t\t\t} else if (friend.type === 4) { // outgoing friend requests\n\t\t\t\t\t\t\tthis.outgoing_friend_requests.add(new User(friend.user, client));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclient.emit(\"warn\", \"unknown friend type \" + friend.type);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.friends = null;\n\t\t\t\t\tthis.blocked_users = null;\n\t\t\t\t\tthis.incoming_friend_requests = null;\n\t\t\t\t\tthis.outgoing_friend_requests = null;\n\t\t\t\t}\n\n\t\t\t\t// add notes to users\n\t\t\t\tif(data.notes) {\n\t\t\t\t\tfor(note in data.notes) {\n\t\t\t\t\t\tvar user = this.users.get(\"id\", note);\n\t\t\t\t\t\tif(user) {\n\t\t\t\t\t\t\tvar newUser = user;\n\t\t\t\t\t\t\tnewUser.note = data.notes[note];\n\n\t\t\t\t\t\t\tthis.users.update(user, newUser);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclient.emit(\"warn\", \"note in ready packet but user not cached\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tclient.emit(\"debug\", `ready packet took ${Date.now() - startTime}ms to process`);\n\t\t\t\tclient.emit(\"debug\", `ready with ${this.servers.length} servers, ${this.unavailableServers.length} unavailable servers, ${this.channels.length} channels and ${this.users.length} users cached.`);\n\n\t\t\t\tthis.restartServerCreateTimeout();\n\n\t\t\t\tbreak;\n\n\t\t\tcase PacketType.MESSAGE_CREATE:\n\t\t\t\t// format: https://discordapi.readthedocs.org/en/latest/reference/channels/messages.html#message-format\n\t\t\t\tvar channel = this.channels.get(\"id\", data.channel_id) || this.private_channels.get(\"id\", data.channel_id);\n\t\t\t\tif (channel) {\n\t\t\t\t\tvar msg = channel.messages.add(new Message(data, channel, client));\n\t\t\t\t\tchannel.lastMessageID = msg.id;\n\n\t\t\t\t\tif (this.messageAwaits[channel.id + msg.author.id]) {\n\t\t\t\t\t\tthis.messageAwaits[channel.id + msg.author.id].map( fn => fn(msg) );\n\t\t\t\t\t\tthis.messageAwaits[channel.id + msg.author.id] = null;\n\t\t\t\t\t\tclient.emit(\"message\", msg, true); //2nd param is isAwaitedMessage\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclient.emit(\"message\", msg);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"message created but channel is not cached\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.MESSAGE_DELETE:\n\t\t\t\tvar channel = this.channels.get(\"id\", data.channel_id) || this.private_channels.get(\"id\", data.channel_id);\n\t\t\t\tif (channel) {\n\t\t\t\t\t// potentially blank\n\t\t\t\t\tvar msg = channel.messages.get(\"id\", data.id);\n\t\t\t\t\tclient.emit(\"messageDeleted\", msg, channel);\n\t\t\t\t\tif (msg) {\n\t\t\t\t\t\tchannel.messages.remove(msg);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclient.emit(\"debug\", \"message was deleted but message is not cached\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"message was deleted but channel is not cached\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.MESSAGE_DELETE_BULK:\n\t\t\t\tvar channel = this.channels.get(\"id\", data.channel_id) || this.private_channels.get(\"id\", data.channel_id);\n\t\t\t\tif (channel) {\n\t\t\t\t\tdata.ids.forEach((id) => {\n\t\t\t\t\t\t// potentially blank\n\t\t\t\t\t\tvar msg = channel.messages.get(\"id\", id);\n\t\t\t\t\t\tclient.emit(\"messageDeleted\", msg, channel);\n\t\t\t\t\t\tif (msg) {\n\t\t\t\t\t\t\tchannel.messages.remove(msg);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclient.emit(\"debug\", \"message was deleted but message is not cached\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"message was deleted but channel is not cached\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.MESSAGE_UPDATE:\n\t\t\t\t// format https://discordapi.readthedocs.org/en/latest/reference/channels/messages.html#message-format\n\t\t\t\tvar channel = this.channels.get(\"id\", data.channel_id) || this.private_channels.get(\"id\", data.channel_id);\n\t\t\t\tif (channel) {\n\t\t\t\t\t// potentially blank\n\t\t\t\t\tvar msg = channel.messages.get(\"id\", data.id);\n\n\t\t\t\t\tif (msg) {\n\t\t\t\t\t\t// old message exists\n\t\t\t\t\t\tdata.nonce = data.nonce !== undefined ? data.nonce : msg.nonce;\n\t\t\t\t\t\tdata.attachments = data.attachments !== undefined ? data.attachments : msg.attachments;\n\t\t\t\t\t\tdata.tts = data.tts !== undefined ? data.tts : msg.tts;\n\t\t\t\t\t\tdata.embeds = data.embeds !== undefined ? data.embeds : msg.embeds;\n\t\t\t\t\t\tdata.timestamp = data.timestamp !== undefined ? data.timestamp : msg.timestamp;\n\t\t\t\t\t\tdata.mention_everyone = data.mention_everyone !== undefined ? data.mention_everyone : msg.everyoneMentioned;\n\t\t\t\t\t\tdata.content = data.content !== undefined ? data.content : msg.content;\n\t\t\t\t\t\tdata.mentions = data.mentions !== undefined ? data.mentions : msg.mentions;\n\t\t\t\t\t\tdata.author = data.author !== undefined ? data.author : msg.author;\n\t\t\t\t\t\tmsg = new Message(msg, channel, client);\n\t\t\t\t\t} else if (!data.author || !data.content) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tvar nmsg = new Message(data, channel, client);\n\t\t\t\t\tclient.emit(\"messageUpdated\", msg, nmsg);\n\t\t\t\t\tif (msg) {\n\t\t\t\t\t\tchannel.messages.update(msg, nmsg);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"message was updated but channel is not cached\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.SERVER_CREATE:\n\t\t\t\tvar server = this.servers.get(\"id\", data.id);\n\t\t\t\tif (!server) {\n\t\t\t\t\tif (!data.unavailable) {\n\t\t\t\t\t\tserver = this.servers.add(new Server(data, client));\n\t                    if(client.options.bot === false) {\n\t                        this.unsyncedGuilds++;\n\t                        this.syncGuild(server.id);\n\t                    }\n\t\t\t\t\t\tif (client.readyTime) {\n\t\t\t\t\t\t\tclient.emit(\"serverCreated\", server);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.client.options.forceFetchUsers && server.large && server.members.length < server.memberCount) {\n\t\t\t\t\t\t\tthis.getGuildMembers(server.id, Math.ceil(server.memberCount / 1000));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar unavailable = this.unavailableServers.get(\"id\", server.id);\n\t\t\t\t\t\tif (unavailable) {\n\t\t\t\t\t\t\tthis.unavailableServers.remove(unavailable);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.restartServerCreateTimeout();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclient.emit(\"debug\", \"server was unavailable, could not create\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.SERVER_DELETE:\n\t\t\t\tvar server = this.servers.get(\"id\", data.id);\n\t\t\t\tif (server) {\n\t\t\t\t\tif (!data.unavailable) {\n\t\t\t\t\t\tclient.emit(\"serverDeleted\", server);\n\n\t\t\t\t\t\tfor (var channel of server.channels) {\n\t\t\t\t\t\t\tthis.channels.remove(channel);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.servers.remove(server);\n\n\t\t\t\t\t\tfor (var user of server.members) {\n\t\t\t\t\t\t\tvar found = false;\n\t\t\t\t\t\t\tfor (var s of this.servers) {\n\t\t\t\t\t\t\t\tif (s.members.get(\"id\", user.id)) {\n\t\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!found) {\n\t\t\t\t\t\t\t\tthis.users.remove(user);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclient.emit(\"debug\", \"server was unavailable, could not update\");\n\t\t\t\t\t}\n                \tthis.buckets[\"bot:msg:guild:\" + packet.d.id] =\n\t                    this.buckets[\"dmsg:\" + packet.d.id] =\n\t                    this.buckets[\"bdmsg:\" + packet.d.id] =\n\t                    this.buckets[\"guild_member:\" + packet.d.id] =\n\t                    this.buckets[\"guild_member_nick:\" + packet.d.id] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"server was deleted but it was not in the cache\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.SERVER_UPDATE:\n\t\t\t\tvar server = this.servers.get(\"id\", data.id);\n\t\t\t\tif (server) {\n\t\t\t\t\t// server exists\n\t\t\t\t\tdata.members = data.members || [];\n\t\t\t\t\tdata.channels = data.channels || [];\n\t\t\t\t\tvar newserver = new Server(data, client);\n\t\t\t\t\tnewserver.members = server.members;\n\t\t\t\t\tnewserver.memberMap = server.memberMap;\n\t\t\t\t\tnewserver.channels = server.channels;\n\t\t\t\t\tif (newserver.equalsStrict(server)) {\n\t\t\t\t\t\t// already the same don't do anything\n\t\t\t\t\t\tclient.emit(\"debug\", \"received server update but server already updated\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclient.emit(\"serverUpdated\", new Server(server, client), newserver);\n\t\t\t\t\t\tthis.servers.update(server, newserver);\n\t\t\t\t\t}\n\t\t\t\t} else if (!server) {\n\t\t\t\t\tclient.emit(\"warn\", \"server was updated but it was not in the cache\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.CHANNEL_CREATE:\n\n\t\t\t\tvar channel = this.channels.get(\"id\", data.id);\n\n\t\t\t\tif (!channel) {\n\n\t\t\t\t\tvar server = this.servers.get(\"id\", data.guild_id);\n\t\t\t\t\tif (server) {\n\t\t\t\t\t\tvar chan = null;\n\t\t\t\t\t\tif (data.type === 0) {\n\t\t\t\t\t\t\tchan = this.channels.add(new TextChannel(data, client, server));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchan = this.channels.add(new VoiceChannel(data, client, server));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclient.emit(\"channelCreated\", server.channels.add(chan));\n\t\t\t\t\t} else if (data.is_private) {\n\t\t\t\t\t\tclient.emit(\"channelCreated\", this.private_channels.add(new PMChannel(data, client)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclient.emit(\"warn\", \"channel created but server does not exist\");\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"channel created but already in cache\");\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase PacketType.CHANNEL_DELETE:\n\t\t\t\tvar channel = this.channels.get(\"id\", data.id) || this.private_channels.get(\"id\", data.id);\n\t\t\t\tif (channel) {\n\n\t\t\t\t\tif (channel.server) { // accounts for PMs\n\t\t\t\t\t\tchannel.server.channels.remove(channel);\n\t\t\t\t\t\tthis.channels.remove(channel);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.private_channels.remove(channel);\n\t\t\t\t\t}\n\n\t\t\t\t\tclient.emit(\"channelDeleted\", channel);\n\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"channel deleted but already out of cache?\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.CHANNEL_UPDATE:\n\t\t\t\tvar channel = this.channels.get(\"id\", data.id) || this.private_channels.get(\"id\", data.id);\n\t\t\t\tif (channel) {\n\n\t\t\t\t\tif (channel instanceof PMChannel) {\n\t\t\t\t\t\t//PM CHANNEL\n\t\t\t\t\t\tclient.emit(\"channelUpdated\", new PMChannel(channel, client),\n\t\t\t\t\t\t\tthis.private_channels.update(channel, new PMChannel(data, client)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (channel.server) {\n\t\t\t\t\t\t\tif (channel.type === 0) {\n\t\t\t\t\t\t\t\t//TEXT CHANNEL\n\t\t\t\t\t\t\t\tvar chan = new TextChannel(data, client, channel.server);\n\t\t\t\t\t\t\t\tchan.messages = channel.messages;\n\t\t\t\t\t\t\t\tclient.emit(\"channelUpdated\", channel, chan);\n\t\t\t\t\t\t\t\tchannel.server.channels.update(channel, chan);\n\t\t\t\t\t\t\t\tthis.channels.update(channel, chan);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t//VOICE CHANNEL\n\t\t\t\t\t\t\t\tdata.members = channel.members;\n\t\t\t\t\t\t\t\tvar chan = new VoiceChannel(data, client, channel.server);\n\t\t\t\t\t\t\t\tclient.emit(\"channelUpdated\", channel, chan);\n\t\t\t\t\t\t\t\tchannel.server.channels.update(channel, chan);\n\t\t\t\t\t\t\t\tthis.channels.update(channel, chan);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclient.emit(\"warn\", \"channel updated but server non-existant\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"channel updated but not in cache\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.SERVER_ROLE_CREATE:\n\t\t\t\tvar server = this.servers.get(\"id\", data.guild_id);\n\t\t\t\tif (server) {\n\t\t\t\t\tclient.emit(\"serverRoleCreated\", server.roles.add(new Role(data.role, server, client)), server);\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"server role made but server not in cache\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.SERVER_ROLE_DELETE:\n\t\t\t\tvar server = this.servers.get(\"id\", data.guild_id);\n\t\t\t\tif (server) {\n\t\t\t\t\tvar role = server.roles.get(\"id\", data.role_id);\n\t\t\t\t\tif (role) {\n\t\t\t\t\t\tserver.roles.remove(role);\n\t\t\t\t\t\tclient.emit(\"serverRoleDeleted\", role);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclient.emit(\"warn\", \"server role deleted but role not in cache\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"server role deleted but server not in cache\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.SERVER_ROLE_UPDATE:\n\t\t\t\tvar server = this.servers.get(\"id\", data.guild_id);\n\t\t\t\tif (server) {\n\t\t\t\t\tvar role = server.roles.get(\"id\", data.role.id);\n\t\t\t\t\tif (role) {\n\t\t\t\t\t\tvar newRole = new Role(data.role, server, client);\n\t\t\t\t\t\tclient.emit(\"serverRoleUpdated\", new Role(role, server, client), newRole);\n\t\t\t\t\t\tserver.roles.update(role, newRole);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclient.emit(\"warn\", \"server role updated but role not in cache\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"server role updated but server not in cache\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.SERVER_MEMBER_ADD:\n\t\t\t\tvar server = this.servers.get(\"id\", data.guild_id);\n\t\t\t\tif (server) {\n\n\t\t\t\t\tserver.memberMap[data.user.id] = {\n\t\t\t\t\t\troles: data.roles,\n\t\t\t\t\t\tmute: false,\n\t\t\t\t\t\tselfMute: false,\n\t\t\t\t\t\tdeaf: false,\n\t\t\t\t\t\tselfDeaf: false,\n\t\t\t\t\t\tjoinedAt: Date.parse(data.joined_at),\n\t\t\t\t\t\tnick: data.nick || null\n\t\t\t\t\t};\n\n\t\t\t\t\tserver.memberCount++;\n\n\t\t\t\t\tclient.emit(\n\t\t\t\t\t\t\"serverNewMember\",\n\t\t\t\t\t\tserver,\n\t\t\t\t\t\tserver.members.add(this.users.add(new User(data.user, client)))\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"server member added but server doesn't exist in cache\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.SERVER_MEMBER_REMOVE:\n\t\t\t\tvar server = this.servers.get(\"id\", data.guild_id);\n\t\t\t\tif (server) {\n\t\t\t\t\tvar user = this.users.get(\"id\", data.user.id);\n\t\t\t\t\tif (user) {\n\t\t\t\t\t\tclient.emit(\"serverMemberRemoved\", server, user);\n\t\t\t\t\t\tserver.memberMap[data.user.id] = null;\n\t\t\t\t\t\tserver.members.remove(user);\n\t\t\t\t\t\tserver.memberCount--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclient.emit(\"warn\", \"server member removed but user doesn't exist in cache\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"server member removed but server doesn't exist in cache\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.SERVER_MEMBER_UPDATE:\n\t\t\t\tvar server = this.servers.get(\"id\", data.guild_id);\n\t\t\t\tif (server) {\n\t\t\t\t\tvar user = this.users.add(new User(data.user, client));\n\t\t\t\t\tif (user) {\n\t\t\t\t\t\tvar oldMember = null;\n\t\t\t\t\t\tif (server.memberMap[data.user.id]) {\n\t\t\t\t\t\t\toldMember = {\n\t\t\t\t\t\t\t\troles: server.memberMap[data.user.id].roles,\n\t\t\t\t\t\t\t\tmute: server.memberMap[data.user.id].mute,\n\t\t\t\t\t\t\t\tselfMute: server.memberMap[data.user.id].selfMute,\n\t\t\t\t\t\t\t\tdeaf: server.memberMap[data.user.id].deaf,\n\t\t\t\t\t\t\t\tselfDeaf: server.memberMap[data.user.id].selfDeaf,\n\t\t\t\t\t\t\t\tnick: server.memberMap[data.user.id].nick\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tserver.memberMap[data.user.id] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tserver.memberMap[data.user.id].roles = data.roles ? data.roles : server.memberMap[data.user.id].roles;\n\t\t\t\t\t\tserver.memberMap[data.user.id].mute = data.mute || server.memberMap[data.user.id].mute;\n\t\t\t\t\t\tserver.memberMap[data.user.id].selfMute = data.self_mute === undefined ? server.memberMap[data.user.id].selfMute : data.self_mute;\n\t\t\t\t\t\tserver.memberMap[data.user.id].deaf = data.deaf || server.memberMap[data.user.id].deaf;\n\t\t\t\t\t\tserver.memberMap[data.user.id].selfDeaf = data.self_deaf === undefined ? server.memberMap[data.user.id].selfDeaf : data.self_deaf;\n\t\t\t\t\t\tserver.memberMap[data.user.id].nick = data.nick === undefined ? server.memberMap[data.user.id].nick : data.nick || null;\n\t\t\t\t\t\tclient.emit(\"serverMemberUpdated\", server, user, oldMember);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclient.emit(\"warn\", \"server member removed but user doesn't exist in cache\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"server member updated but server doesn't exist in cache\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.PRESENCE_UPDATE:\n\n\t\t\t\tvar user = this.users.add(new User(data.user, client));\n\t\t\t\tvar server = this.servers.get(\"id\", data.guild_id);\n\n\t\t\t\tif (user && server) {\n\n\t\t\t\t\tserver.members.add(user);\n\n\t\t\t\t\tdata.user.username = data.user.username || user.username;\n\t\t\t\t\tdata.user.id = data.user.id || user.id;\n\t\t\t\t\tdata.user.avatar = data.user.avatar !== undefined ? data.user.avatar : user.avatar;\n\t\t\t\t\tdata.user.discriminator = data.user.discriminator || user.discriminator;\n\t\t\t\t\tdata.user.status = data.status || user.status;\n\t\t\t\t\tdata.user.game = data.game !== undefined ? data.game : user.game;\n\t\t\t\t\tdata.user.bot = data.user.bot !== undefined ? data.user.bot : user.bot;\n\n\t\t\t\t\tvar presenceUser = new User(data.user, client);\n\n\t\t\t\t\tif (!presenceUser.equalsStrict(user)) {\n\t\t\t\t\t\tclient.emit(\"presence\", user, presenceUser);\n\t\t\t\t\t\tthis.users.update(user, presenceUser);\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"presence update but user/server not in cache\");\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase PacketType.USER_UPDATE:\n\n\t\t\t\tvar user = this.users.get(\"id\", data.id);\n\n\t\t\t\tif (user) {\n\n\t\t\t\t\tdata.username = data.username || user.username;\n\t\t\t\t\tdata.id = data.id || user.id;\n\t\t\t\t\tdata.avatar = data.avatar || user.avatar;\n\t\t\t\t\tdata.discriminator = data.discriminator || user.discriminator;\n\t\t\t\t\tthis.email = data.email || this.email;\n\n\t\t\t\t\tvar presenceUser = new User(data, client);\n\n\t\t\t\t\tclient.emit(\"presence\", user, presenceUser);\n\t\t\t\t\tthis.users.update(user, presenceUser);\n\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"user update but user not in cache (this should never happen)\");\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase PacketType.TYPING:\n\n\t\t\t\tvar user = this.users.get(\"id\", data.user_id);\n\t\t\t\tvar channel = this.channels.get(\"id\", data.channel_id) || this.private_channels.get(\"id\", data.channel_id);\n\n\t\t\t\tif (user && channel) {\n\t\t\t\t\tif (user.typing.since) {\n\t\t\t\t\t\tuser.typing.since = Date.now();\n\t\t\t\t\t\tuser.typing.channel = channel;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuser.typing.since = Date.now();\n\t\t\t\t\t\tuser.typing.channel = channel;\n\t\t\t\t\t\tclient.emit(\"userTypingStarted\", user, channel);\n\t\t\t\t\t}\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (Date.now() - user.typing.since > 5500) {\n\t\t\t\t\t\t\t// they haven't typed since\n\t\t\t\t\t\t\tuser.typing.since = null;\n\t\t\t\t\t\t\tuser.typing.channel = null;\n\t\t\t\t\t\t\tclient.emit(\"userTypingStopped\", user, channel);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 6000);\n\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"user typing but user or channel not existant in cache\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.SERVER_BAN_ADD:\n\t\t\t\tvar user = this.users.get(\"id\", data.user.id);\n\t\t\t\tvar server = this.servers.get(\"id\", data.guild_id);\n\n\t\t\t\tif (user && server) {\n\t\t\t\t\tclient.emit(\"userBanned\", user, server);\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"user banned but user/server not in cache.\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.SERVER_BAN_REMOVE:\n\t\t\t\tvar user = this.users.get(\"id\", data.user.id);\n\t\t\t\tvar server = this.servers.get(\"id\", data.guild_id);\n\n\t\t\t\tif (user && server) {\n\t\t\t\t\tclient.emit(\"userUnbanned\", user, server);\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"user unbanned but user/server not in cache.\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.USER_NOTE_UPDATE:\n\t\t\t\tif(this.user.bot) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar user = this.users.get(\"id\", data.id);\n\t\t\t\tvar oldNote = user.note;\n\t\t\t\tvar note = data.note || null;\n\n\t\t\t\t// user in cache\n\t\t\t\tif(user) {\n\t\t\t\t\tvar updatedUser = user;\n\t\t\t\t\tupdatedUser.note = note;\n\n\t\t\t\t\tclient.emit(\"noteUpdated\", user, oldNote);\n\n\t\t\t\t\tthis.users.update(user, updatedUser);\n\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"note updated but user not in cache\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.VOICE_STATE_UPDATE:\n\t\t\t\tvar user = this.users.get(\"id\", data.user_id);\n\t\t\t\tvar server = this.servers.get(\"id\", data.guild_id);\n\t\t\t\tvar connection = this.voiceConnections.get(\"server\", server);\n\n\t\t\t\tif (user && server) {\n\n\t\t\t\t\tif (data.channel_id) {\n\t\t\t\t\t\t// in voice channel\n\t\t\t\t\t\tvar channel = this.channels.get(\"id\", data.channel_id);\n\t\t\t\t\t\tif (channel && channel.type === 2) {\n\t\t\t\t\t\t\tserver.eventVoiceStateUpdate(channel, user, data);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclient.emit(\"warn\", \"voice state channel not in cache\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// not in voice channel\n\t\t\t\t\t\tclient.emit(\"voiceLeave\", server.eventVoiceLeave(user), user);\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"voice state update but user or server not in cache\");\n\t\t\t\t}\n\n\t\t\t\tif (user && user.id === this.user.id) { // only for detecting self user movements for connections.\n\t\t\t\t\tvar connection = this.voiceConnections.get(\"server\", server);\n\t\t\t\t\t// existing connection, perhaps channel moved\n\t\t\t\t\tif (connection && connection.voiceChannel && connection.voiceChannel.id !== data.channel_id) {\n\t\t\t\t\t\t// moved, update info\n\t\t\t\t\t\tconnection.voiceChannel = this.channels.get(\"id\", data.channel_id);\n\t\t\t\t\t\tclient.emit(\"voiceMoved\", connection.voiceChannel); // Moved to a new channel\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase PacketType.SERVER_MEMBERS_CHUNK:\n\n\t\t\t\tvar server = this.servers.get(\"id\", data.guild_id);\n\n\t\t\t\tif (server) {\n\n\t\t\t\t\tvar testtime = Date.now();\n\n\t\t\t\t\tfor (var user of data.members) {\n\t\t\t\t\t\tserver.memberMap[user.user.id] = {\n\t\t\t\t\t\t\troles: user.roles,\n\t\t\t\t\t\t\tmute: user.mute,\n\t\t\t\t\t\t\tselfMute: false,\n\t\t\t\t\t\t\tdeaf: user.deaf,\n\t\t\t\t\t\t\tselfDeaf: false,\n\t\t\t\t\t\t\tjoinedAt: Date.parse(user.joined_at),\n\t\t\t\t\t\t\tnick: user.nick || null\n\t\t\t\t\t\t};\n\t\t\t\t\t\tserver.members.add(this.users.add(new User(user.user, client)));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.forceFetchCount.hasOwnProperty(server.id)) {\n\t\t\t\t\t\tif (this.forceFetchCount[server.id] <= 1) {\n\t\t\t\t\t\t\tdelete this.forceFetchCount[server.id];\n\t\t\t\t\t\t\tthis.restartServerCreateTimeout();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.forceFetchCount[server.id]--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tclient.emit(\"debug\", (Date.now() - testtime) + \"ms for \" + data.members.length + \" user chunk for server with id \" + server.id);\n\n\t\t\t\t} else {\n\t\t\t\t\tclient.emit(\"warn\", \"chunk update received but server not in cache\");\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase PacketType.FRIEND_ADD:\n\t\t\t\tif (this.user.bot) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (data.type === 1) { // accepted/got accepted a friend request\n\t\t\t\t\tvar inUser = this.incoming_friend_requests.get(\"id\", data.id);\n\t\t\t\t\tif (inUser) {\n\t\t\t\t\t\t// client accepted another user\n\t\t\t\t\t\tthis.incoming_friend_requests.remove(this.friends.add(new User(data.user, client)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar outUser = this.outgoing_friend_requests.get(\"id\", data.id);\n\t\t\t\t\tif (outUser) {\n\t\t\t\t\t\t// another user accepted the client\n\t\t\t\t\t\tthis.outgoing_friend_requests.remove(this.friends.add(new User(data.user, client)));\n\t\t\t\t\t\tclient.emit(\"friendRequestAccepted\", outUser);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (data.type === 2) {\n\t\t\t\t\t// client received block\n\t\t\t\t\tthis.blocked_users.add(new User(data.user, client));\n\t\t\t\t} else if (data.type === 3) {\n\t\t\t\t\t// client received friend request\n\t\t\t\t\tclient.emit(\"friendRequestReceived\", this.incoming_friend_requests.add(new User(data.user, client)));\n\t\t\t\t} else if (data.type === 4) {\n\t\t\t\t\t// client sent friend request\n\t\t\t\t\tthis.outgoing_friend_requests.add(new User(data.user, client));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.FRIEND_REMOVE:\n\t\t\t\tif (this.user.bot) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar user = this.friends.get(\"id\", data.id);\n\t\t\t\tif (user) {\n\t\t\t\t\tthis.friends.remove(user);\n\t\t\t\t\tclient.emit(\"friendRemoved\", user);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tuser = this.blocked_users.get(\"id\", data.id);\n\t\t\t\tif (user) { // they rejected friend request\n\t\t\t\t\tthis.blocked_users.remove(user);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tuser = this.incoming_friend_requests.get(\"id\", data.id);\n\t\t\t\tif (user) { // they rejected outgoing friend request OR client user manually deleted incoming thru web client/other clients\n\t\t\t\t\tvar rejectedUser = this.outgoing_friend_requests.get(\"id\", user.id);\n\t\t\t\t\tif (rejectedUser) {\n\t\t\t\t\t\t// other person rejected outgoing\n\t\t\t\t\t\tclient.emit(\"friendRequestRejected\", this.outgoing_friend_requests.remove(rejectedUser));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// incoming deleted manually\n\t\t\t\t\tthis.incoming_friend_requests.remove(user);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tuser = this.outgoing_friend_requests.get(\"id\", data.id);\n\t\t\t\tif (user) { // client cancelled incoming friend request OR client user manually deleted outgoing thru web client/other clients\n\t\t\t\t\tvar incomingCancel = this.incoming_friend_requests.get(\"id\", user.id);\n\t\t\t\t\tif (incomingCancel) {\n\t\t\t\t\t\t// client cancelled incoming\n\t\t\t\t\t\tthis.incoming_friend_requests.remove(user);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// outgoing deleted manually\n\t\t\t\t\tthis.outgoing_friend_requests.remove(user);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase PacketType.SERVER_SYNC:// (╯°□°）╯︵ ┻━┻ thx Discord devs\n                var guild = this.servers.get(data.id);\n\t\t\t\tdata.members.forEach((dataUser) => {\n\t\t\t\t\tguild.memberMap[dataUser.user.id] = {\n\t\t\t\t\t\troles: dataUser.roles,\n\t\t\t\t\t\tmute: dataUser.mute,\n\t\t\t\t\t\tselfMute: dataUser.self_mute,\n\t\t\t\t\t\tdeaf: dataUser.deaf,\n\t\t\t\t\t\tselfDeaf: dataUser.self_deaf,\n\t\t\t\t\t\tjoinedAt: Date.parse(dataUser.joined_at),\n\t\t\t\t\t\tnick: dataUser.nick || null\n\t\t\t\t\t};\n\t\t\t\t\tguild.members.add(client.internal.users.add(new User(dataUser.user, client)));\n\t\t\t\t});\n\t\t\t\tfor (var presence of data.presences) {\n\t\t\t\t\tvar user = client.internal.users.get(\"id\", presence.user.id);\n\t\t\t\t\tif(user) {\n\t\t\t\t\t\tuser.status = presence.status;\n\t\t\t\t\t\tuser.game = presence.game;\n\t\t\t\t\t}\n\t\t\t\t}\n                if(guild.pendingVoiceStates && guild.pendingVoiceStates.length > 0) {\n\t\t\t\t\tfor (var voiceState of guild.pendingVoiceStates) {\n\t\t\t\t\t\tlet user = guild.members.get(\"id\", voiceState.user_id);\n\t\t\t\t\t\tif (user) {\n\t\t\t\t\t\t\tguild.memberMap[user.id] = guild.memberMap[user.id] || {};\n\t\t\t\t\t\t\tguild.memberMap[user.id].mute = voiceState.mute || guild.memberMap[user.id].mute;\n\t\t\t\t\t\t\tguild.memberMap[user.id].selfMute = voiceState.self_mute === undefined ? guild.memberMap[user.id].selfMute : voiceState.self_mute;\n\t\t\t\t\t\t\tguild.memberMap[user.id].deaf = voiceState.deaf || guild.memberMap[user.id].deaf;\n\t\t\t\t\t\t\tguild.memberMap[user.id].selfDeaf = voiceState.self_deaf === undefined ? guild.memberMap[user.id].selfDeaf : voiceState.self_deaf;\n\t\t\t\t\t\t\tlet channel = guild.channels.get(\"id\", voiceState.channel_id);\n\t\t\t\t\t\t\tif (channel) {\n\t\t\t\t\t\t\t\tguild.eventVoiceJoin(user, channel);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tguild.client.emit(\"warn\", \"channel doesn't exist even though GUILD_SYNC expects them to\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tguild.client.emit(\"warn\", \"user doesn't exist even though GUILD_SYNC expects them to\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                }\n                guild.pendingVoiceStates = null;\n                this.unsyncedGuilds--;\n                this.restartServerCreateTimeout();\n                break;\n\t\t\tdefault:\n\t\t\t\tclient.emit(\"unknown\", packet);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tresume() {\n\t\tvar data = {\n\t\t\top: 6,\n\t\t\td: {\n\t            token: this.token,\n\t            session_id: this.sessionID,\n\t            seq: this.sequence\n\t\t\t}\n\t\t};\n\n\t\tthis.sendWS(data);\n\t}\n\n\tidentify() {\n\t\tvar data = {\n\t\t\top: 2,\n\t\t\td: {\n\t\t\t\ttoken: this.token,\n\t\t\t\tv: GATEWAY_VERSION,\n\t\t\t\tcompress: this.client.options.compress,\n\t\t\t\tlarge_threshold : this.client.options.largeThreshold,\n\t\t\t\tproperties: {\n\t\t\t\t\t\"$os\": process.platform,\n\t\t\t\t\t\"$browser\": \"discord.js\",\n\t\t\t\t\t\"$device\": \"discord.js\",\n\t\t\t\t\t\"$referrer\": \"\",\n\t\t\t\t\t\"$referring_domain\": \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (this.client.options.shard) {\n\t\t\tdata.d.shard = this.client.options.shard;\n\t\t}\n\n\t\tthis.sendWS(data);\n\t}\n\n\theartbeat() {\n\t\tconsole.log(\"heartbeat called, value \" + this.heartbeatAcked);\n\t  if (!this.heartbeatAcked) this.disconnected(true);\n\t  console.log(\"set it to false\");\n    this.heartbeatAcked = false;\n\t\tthis.sendWS({ op: 1, d: Date.now() });\n\t}\n}\n"]}